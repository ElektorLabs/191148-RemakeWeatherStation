{"version":3,"sources":["gauge.min.js"],"names":["ns","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","animationTransformed","isFinite","isNaN","frame","requestAnimationFrame","inProgress","Collection","apply","this","arguments","verifyError","err","DOMException","result","prepareTicks","options","majorTicks","push","drawings","formatMajorTickNumber","minValue","maxValue","tickSide","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","valueDec","int","valueInt","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","isVertical","undefined","grad","createLinearGradient","addColorStop","drawShadow","restore","save","borderShadowWidth","shadowBlur","shadowColor","colorBorderShadow","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","font","target","baseSize","reset","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","valueTextShadow","colorValueTextShadow","drawValueBox","max","valueBox","addLength","maxValueWidth","repeat","String","parseInt","concat","map","text","valueText","tunit","runit","tw","measureText","Number","width","th","fontValueSize","sw","valueBoxStroke","bmax","bw","bh","br","valueBoxBorderRadius","obw","valueBoxWidth","bx","by","gy","rect","grd","createRadialGradient","colorValueBoxRect","colorValueBoxRectEnd","stroke","colorValueBoxShadow","colorValueBoxBackground","fillStyle","fill","colorValueText","textAlign","textBaseline","fillText","normalizedValue","min","dt","normal","indented","drawRadialBorder","arc","maxRadialRadius","pxRatio","SmartCanvas","pixelRatio","maxRadius","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawRadialPlate","d0","r0","r1","r2","r3","shadowDrawn","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorPlateEnd","colorPlate","drawRadialHighlights","hlWidth","highlightsWidth","radialTicksRadius","highlights","vd","ticksAngle","hlt","rotate","HPI","startAngle","to","color","drawRadialMinorTicks","range","delta","minTicks","minorTicks","ratio","colorMinorTicks","colorStrokeTicks","exactTicks","BaseGauge","mod","closeStrokedPath","unit","barWidth","barStrokeWidth","drawRadialMajorTicks","colors","colorMajorTicks","radialNextAngle","strokeTicks","drawRadialNumbers","points","isAnimated","animationTarget","colorNumbers","plateValueAngle","textWidth","textHeight","fontNumbersSize","textRadius","sqrt","point","numbersMargin","drawRadialTitle","title","colorTitle","drawRadialUnits","units","colorUnits","drawRadialNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","pad1","needleWidth","pad2","isFixed","colorNeedle","colorNeedleEnd","needleType","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInner","colorNeedleCircleInnerEnd","drawRadialValueBox","drawRadialProgressBar","rMax","rMin","half","sa","ea","colorBarStroke","colorBar","barShadow","clip","colorBarShadow","barProgress","colorBarProgress","displayValue","gauge","animatedValue","drawRectangle","colorStart","colorEnd","drawLinearBorder","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barBeginCircle","barLength","barMargin","x0","y0","dx","hasLeft","hasRight","ticksWidth","dy","barOffset","ticksLength","X","Y","baseX","baseY","ticksPadding","drawLinearBarShape","type","_barDimensions","fullBarLength","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","colorBarEnd","colorBarProgressEnd","drawLinearBar","hasTicksBar","notWhich","needleSide","numberSide","drawLinearBarProgress","drawLinearBarHighlights","_context$barDimension","tickOffset","interval","eX","eH","eY","hLeft","hRight","entry","eStart","eW","drawLinearTick","drawLinearTicks","ticks","minVal","maxVal","lineLength","_context$barDimension2","tickX","tickY","tickLen","tickLeft","tickRight","drawLinearMajorTicks","_drawings$prepareTick","_drawings$prepareTick2","_slicedToArray","valuePerNonExactTick","tick","_context$barDimension3","rightTicks","leftTicks","sX","sY","drawLinearTickStroke","drawLinearMinorTicks","_drawings$prepareTick3","_drawings$prepareTick4","ticksWidthMinor","drawLinearMajorTicksNumbers","_context$barDimension4","tickValues","numLeft","numRight","textX","textY","numberOffset","textMargin","drawLinearTitle","_context$barDimension5","fontTitleSize","drawLinearUnits","_context$barDimension6","fontUnitsSize","drawLinearBarNeedle","_context$barDimension7","position","tickWidth","baseLength","needleLength","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","barStart","nLeft","nRight","needleStyle","isRight","peakLength","bodyLength","halfWidth","drawLinearValueBox","boxWidth","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_set","set","setter","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","len","nextKey","searchElement","fromIndex","k","O","Infinity","_value","relativeStart","relativeEnd","final","EventEmitter","_events","addListener","on","removeListener","off","event","_len","args","_key","_len2","handlers","_key2","handler","wrapper","_handler","index","splice","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","a","b","elastic","delastic","Animation","_this","cancel","performance","now","id","DomObserver","element","toDashed","Type","mutationsObserved","isObservable","MutationObserver","GAUGES_NO_AUTO_INIT","domReady","traverse","bind","node","tagName","getAttribute","elements","document","getElementsByTagName","process","observe","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","observer","forEach","attr","disconnect","destroy","_prop","part","_options","update","test","e","camelCase","str","dashed","readyState","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","clearRect","onRedraw","scale","redraw","devicePixelRatio","matchMedia","GenericOptions","animateOnInit","borders","listeners","animation","animationDuration","animationRule","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","getElementById","version","gauges","_EventEmitter","_this3","className","name","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","configure","emit","_this4","ensureValue","fromValue","animate","newValue","toCamelCase","m","defaultRadialGaugeOptions","useMinPath","RadialGauge","_BaseGauge","_ref","commit","drawImage","_context","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","_ref2","drawBox","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;CAyBC,SAASA,GAAK,YAUf,SAASC,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIG,GAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,EAAM,OAAOC,GAAe,MAAOH,OAAMK,KAAKN,GAE1L,QAASO,GAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIC,WAAU,iEAAoED,GAAeD,GAASG,UAAYC,OAAOC,OAAOJ,GAAcA,EAAWE,WAAaG,aAAeC,MAAOP,EAAUQ,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeT,IAAYG,OAAOO,eAAiBP,OAAOO,eAAeX,EAAUC,GAAcD,EAASY,UAAYX,GAEje,QAASY,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIb,WAAU,qCAyKhH,QAASc,GAAUC,EAAMvB,GAMrB,GAJKA,IACDA,EAAyB,mBAAXwB,QAAyBC,OAASD,YAG1B,KAAfxB,EAAKuB,GACZ,MAAOvB,GAAKuB,EAQhB,KALA,GAAIG,IAAW,SAAU,MAAO,KAAM,KAClC7B,EAAI,EACJ8B,EAAID,EAAQ3B,OACZ6B,EAAcL,EAAKM,OAAO,GAAGC,cAAgBP,EAAKQ,OAAO,GAEtDlC,EAAI8B,EAAG9B,IAAK,CACf,GAAImC,GAAahC,EAAK0B,EAAQ7B,GAAK+B,EAGnC,QAA0B,KAAfI,EACP,MAAOA,GAIf,MAAO,MA2TX,QAASC,GAAKC,EAAMC,EAAMC,EAAOC,EAAMC,EAAUC,EAAKC,GAClD,GAAoB,kBAATH,GACP,KAAM,IAAI7B,WAAU,0BAA2B6B,EAGnD,IAAII,GAAWP,EAAOE,EAClBM,EAAUD,EAAWH,EACrBK,EAAuB,CAEvBD,GAAU,IACVA,EAAU,GAGE,IAAZA,IACAC,EAAuBN,EAAKK,GAIxBE,SAASD,KAA0BE,MAAMF,KACzCD,EAAUC,IAIlBR,GAAQA,EAAKO,GAETD,EAAWH,EACXE,EAAKM,MAAQC,GAAsB,SAAUb,GACzC,MAAOD,GAAKC,EAAMC,EAAMC,EAAOC,EAAMC,EAAUC,EAAKC,MAGxDD,GAAOA,IACPC,EAAKQ,YAAa,GA+hC1B,QAASC,KACLtD,MAAMc,UAAUG,YAAYsC,MAAMC,KAAMC,WAuiB5C,QAASC,GAAYC,GAIjB,KAAIA,YAAeC,eAA+B,aAAfD,EAAIE,QAIvC,KAAMF,GAWV,QAASG,GAAaC,GAUlB,MATMA,GAAQC,qBAAsBhE,SAChC+D,EAAQC,WAAaD,EAAQC,YAAcD,EAAQC,gBAGlDD,EAAQC,WAAW5D,SACpB2D,EAAQC,WAAWC,KAAKC,GAASC,sBAAsBJ,EAAQK,SAAUL,IACzEA,EAAQC,WAAWC,KAAKC,GAASC,sBAAsBJ,EAAQM,SAAUN,MAGhD,UAArBA,EAAQO,SAA2C,SAArBP,EAAQO,UAclD,QAASC,GAAUC,EAASC,EAAGC,EAAGC,EAAGC,EAAGC,GACpCL,EAAQM,YAERN,EAAQO,OAAON,EAAII,EAAGH,GACtBF,EAAQQ,OAAOP,EAAIE,EAAIE,EAAGH,GAE1BF,EAAQS,iBAAiBR,EAAIE,EAAGD,EAAGD,EAAIE,EAAGD,EAAIG,GAC9CL,EAAQQ,OAAOP,EAAIE,EAAGD,EAAIE,EAAIC,GAE9BL,EAAQS,iBAAiBR,EAAIE,EAAGD,EAAIE,EAAGH,EAAIE,EAAIE,EAAGH,EAAIE,GACtDJ,EAAQQ,OAAOP,EAAII,EAAGH,EAAIE,GAE1BJ,EAAQS,iBAAiBR,EAAGC,EAAIE,EAAGH,EAAGC,EAAIE,EAAIC,GAC9CL,EAAQQ,OAAOP,EAAGC,EAAIG,GAEtBL,EAAQS,iBAAiBR,EAAGC,EAAGD,EAAII,EAAGH,GAEtCF,EAAQU,YAWZ,QAASC,GAASC,EAAKrB,GACnB,GAAIsB,GAAMtB,EAAQuB,SACdC,EAAMxB,EAAQyB,SACdtF,EAAI,EACJ8B,MAAI,GACJyD,MAAS,GACTC,MAAI,EAMR,IAJAN,EAAMO,WAAWP,GACjBM,EAAIN,EAAM,EACVA,EAAMQ,KAAKC,IAAIT,GAEXC,EAAM,EAAG,CAIT,IAHAI,EAASL,EAAIU,QAAQT,GAAKU,WAAWC,MAAM,KAC3ChE,EAAIuD,EAAME,EAAO,GAAGrF,OAEbF,EAAI8B,IAAK9B,EACZuF,EAAO,GAAK,IAAMA,EAAO,EAG7BA,IAAUC,EAAI,IAAM,IAAMD,EAAO,GAAK,IAAMA,EAAO,OAChD,CAIH,IAHAA,EAASG,KAAKK,MAAMb,GAAKW,WACzB/D,EAAIuD,EAAME,EAAOrF,OAEVF,EAAI8B,IAAK9B,EACZuF,EAAS,IAAMA,CAGnBA,IAAUC,EAAI,IAAM,IAAMD,EAG9B,MAAOA,GAYX,QAAStB,GAAsB+B,EAAKnC,GAChC,GAAIoC,OAAQ,GACRC,GAAS,CAUb,OANID,GAD0B,IAA1BpC,EAAQsC,cACAT,KAAKK,MAAMC,GAAKH,WAEhBG,EAAIJ,QAAQ/B,EAAQsC,eAI5BtC,EAAQuC,cAAgB,GAExBF,GAAUD,EAAMI,QAAQ,MAGnBJ,EAAMI,QAAQ,KACR,KAAOxC,EAAQuC,cAAgBvC,EAAQsC,cAAgB,GAAKD,EAAS,EAAI,GAAKD,EAAM/F,QAAQoG,KAAK,KAAOL,EAAMM,QAAQ,IAAK,KAE1H1C,EAAQuC,cAAgBvC,EAAQsC,cAAgB,GAAKD,EAAS,EAAI,GAAKD,EAAM/F,QAAQoG,KAAK,KAAOL,GAI1GA,EAUX,QAASO,GAAQC,GACb,MAAOA,GAAUf,KAAKgB,GAAK,IAW/B,QAASC,GAAYC,EAAQC,GACzB,OAAStC,GAAIqC,EAASlB,KAAKoB,IAAID,GAAQrC,EAAGoC,EAASlB,KAAKqB,IAAIF,IAehE,QAASG,GAAe1C,EAAS2C,EAAWC,EAAShH,GACjD,GAAIiH,KAAa5D,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,KAAmBA,UAAU,GAC5EpD,EAAOoD,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,GAAmBA,UAAU,GAAK,EAE3E8D,EAAO/C,EAAQgD,qBAAqBH,EAAa,EAAIhH,EAAMgH,EAAahH,EAAO,EAAGgH,EAAa,EAAIjH,EAAQiH,EAAajH,EAAS,EAKrI,OAHAmH,GAAKE,aAAa,EAAGN,GACrBI,EAAKE,aAAa,EAAGL,GAEdG,EAYX,QAASG,GAAWlD,EAAST,GAGzB,GAFkBN,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,IAAmBA,UAAU,GAI7E,MADAe,GAAQmD,WACD,CAGXnD,GAAQoD,MAER,IAAIjD,GAAIZ,EAAQ8D,iBAOhB,OALIlD,KACAH,EAAQsD,WAAanD,EACrBH,EAAQuD,YAAchE,EAAQiE,oBAG3B,EAWX,QAASC,GAAiBzD,EAAST,GAC1BA,EAAQmE,eAEb1D,EAAQ2D,cAAgB,EACxB3D,EAAQ4D,cAAgB,EACxB5D,EAAQsD,WAAa,GACrBtD,EAAQuD,YAAchE,EAAQsE,uBAWlC,QAASC,GAAKvE,EAASwE,EAAQC,GAC3B,MAAOzE,GAAQ,OAASwE,EAAS,SAAW,IAAMxE,EAAQ,OAASwE,EAAS,UAAY,IAAMxE,EAAQ,OAASwE,EAAS,QAAUC,EAAW,MAAQzE,EAAQ,OAASwE,GAS1K,QAASE,GAAMjE,GACXA,EAAQ2D,cAAgB,KACxB3D,EAAQ4D,cAAgB,KACxB5D,EAAQsD,WAAa,KACrBtD,EAAQuD,YAAc,GACtBvD,EAAQkE,YAAc,KACtBlE,EAAQmE,UAAY,EACpBnE,EAAQoD,OAYZ,QAASgB,GAAoBpE,EAAST,EAAS8E,EAAQC,GAC/C/E,EAAQgF,kBACRvE,EAAQ2D,cAAgBU,EACxBrE,EAAQ4D,cAAgBS,EACxBrE,EAAQsD,WAAagB,EACrBtE,EAAQuD,YAAchE,EAAQiF,sBAetC,QAASC,GAAazE,EAAST,EAAS7C,EAAOuD,EAAGC,EAAGwE,GACjD,GAAKnF,EAAQoF,SAAb,CAEAV,EAAMjE,EAEN,IAAI4E,GAAYrF,EAAQuB,SAAW,EAAIvB,EAAQuB,SAAW,EACtD+D,EAAgB,IAAIC,OAAO1D,KAAKsD,IAAI3F,MAAM,MAAOgG,OAAOC,SAAStI,IAAQd,OAASgJ,GAAWK,OAAO1F,EAAQC,WAAW0F,IAAI,SAAUtE,GACrI,MAAOmE,QAAOC,SAASpE,EAAK,KAAKhF,OAASgJ,OAE1CO,EAAO5F,EAAQ6F,WAAazE,EAASjE,EAAO6C,GAC5C8F,EAAQX,EAAM,IACdY,EAAQZ,EAAM,IACdL,EAAS,GAAMiB,EACfhB,EAAO,IAAMgB,CAEjBtF,GAAQ8D,KAAOA,EAAKvE,EAAS,QAAS8F,GACtCjB,EAAoBpE,EAAST,EAAS8E,EAAQC,EAE9C,IAAIiB,GAAKvF,EAAQwF,YAAYjG,EAAQ6F,UAAYD,EAAO,IAAMxE,EAAS8E,OAAOZ,GAAgBtF,IAAUmG,KAExGzB,GAAMjE,EAEN,IAAI2F,GAAKxE,WAAW5B,EAAQqG,eAAiBP,EAAQhB,EAASC,EAC1DuB,EAAKP,EAAQnE,WAAW5B,EAAQuG,gBAChCC,EAAa,EAANrB,EAAe,EAALmB,EAEjBG,EAAKT,EAAK,GAAKD,EACfW,EAAK,IAAMN,EAAKtB,EAASC,EACzB4B,EAAKZ,EAAQ/F,EAAQ4G,qBACrBC,GAAOjF,WAAW5B,EAAQ8G,gBAAkB,GAAK,IAAMN,CAE3DK,GAAMJ,IAAOA,EAAKI,GAClBJ,EAAKD,IAASC,EAAKD,EAEnB,IAAIO,GAAKrG,EAAI+F,EAAK,EACdO,EAAKrG,EAAI+F,EAAK,EACdO,EAAKtG,EAAI,KAAOoF,CAMpB,IAJAtF,EAAQM,YAEJ4F,EAAInG,EAAUC,EAASsG,EAAIC,EAAIP,EAAIC,EAAIC,GAASlG,EAAQyG,KAAKH,EAAIC,EAAIP,EAAIC,GAEzEJ,EAAI,CACJ,GAAIa,GAAM1G,EAAQ2G,qBAAqB1G,EAAGuG,EAAY,GAARlB,EAAYrF,EAAGuG,EAAY,GAARlB,EAEjEoB,GAAIzD,aAAa,EAAG1D,EAAQqH,mBAC5BF,EAAIzD,aAAa,EAAG1D,EAAQsH,sBAE5B7G,EAAQkE,YAAcwC,EACtB1G,EAAQmE,UAAY0B,EACpB7F,EAAQ8G,SAGRvH,EAAQwH,sBACR/G,EAAQsD,WAAa,IAAMgC,EAC3BtF,EAAQuD,YAAchE,EAAQwH,qBAG9BxH,EAAQyH,0BACRhH,EAAQiH,UAAY1H,EAAQyH,wBAC5BhH,EAAQkH,QAGZlH,EAAQU,YACRV,EAAQmD,UAERiB,EAAoBpE,EAAST,EAAS8E,EAAQC,GAE9CtE,EAAQiH,UAAY1H,EAAQ4H,eAC5BnH,EAAQoH,UAAY,SACpBpH,EAAQqH,aAAe,aACvBrH,EAAQsH,SAASnC,EAAMmB,EAAKN,EAAK,EAAG9F,EAAI+F,EAAK,EAAIN,EAAK,GACtD3F,EAAQmD,WAUZ,QAASoE,GAAgBhI,GACrB,GAAI7C,GAAQ6C,EAAQ7C,MAChB8K,EAAMjI,EAAQK,SACd8E,EAAMnF,EAAQM,SACd4H,EAAmB,KAAb/C,EAAM8C,EAEhB,QACIE,OAAQhL,EAAQ8K,EAAMA,EAAM9K,EAAQgI,EAAMA,EAAMhI,EAChDiL,SAAUjL,EAAQ8K,EAAMA,EAAMC,EAAK/K,EAAQgI,EAAMA,EAAM+C,EAAK/K,GAgGpE,QAASkL,GAAiBtF,EAAQoD,EAAO1F,EAAS/B,EAAOG,GACrD4B,EAAQM,YAERN,EAAQ6H,IAAI,EAAG,EAAGxG,GAAIiB,GAAS,EAAQ,EAALF,IAAQ,GAC1CpC,EAAQmE,UAAYuB,EACpB1F,EAAQkE,YAAc9F,EAAMsB,GAASgD,eAAe1C,EAAS/B,EAAOG,EAAKkE,GAAUrE,EACnF+B,EAAQ8G,SACR9G,EAAQU,YAWZ,QAASoH,GAAgB9H,EAAST,GAC9B,GAAIwI,GAAUC,GAAYC,UAM1B,OAJKjI,GAAQkI,YACTlI,EAAQkI,UAAYlI,EAAQ0E,IAAMnF,EAAQ8D,kBAAoB9D,EAAQ4I,iBAAmBJ,EAAUxI,EAAQ6I,kBAAoBL,EAAUxI,EAAQ8I,iBAAmBN,GAAWxI,EAAQ4I,iBAAmB,GAAM,IAAM5I,EAAQ6I,kBAAoB,GAAM,IAAM7I,EAAQ8I,iBAAmB,GAAM,IAG5RrI,EAAQkI,UAWnB,QAASI,GAAgBtI,EAAST,GAC9B,GAAIwI,GAAUC,GAAYC,WACtBM,EAAKhJ,EAAQ8D,kBAAoB0E,EACjCS,EAAKxI,EAAQ0E,IAAM6D,EAAKhJ,EAAQ4I,iBAAmBJ,EAAU,EAC7DU,EAAKD,EAAKjJ,EAAQ4I,iBAAmBJ,EAAU,EAAIxI,EAAQ6I,kBAAoBL,EAAU,EAAI,GAC7FW,EAAKD,EAAKlJ,EAAQ6I,kBAAoBL,EAAU,EAAIxI,EAAQ8I,iBAAmBN,EAAU,EAAI,GAC7FY,EAAKb,EAAgB9H,EAAST,GAC9BwD,MAAO,GACP6F,GAAc,CAElB5I,GAAQoD,OAEJ7D,EAAQ4I,mBACRS,EAAclJ,GAASwD,WAAWlD,EAAST,EAASqJ,GACpDhB,EAAiBY,EAAIjJ,EAAQ4I,iBAAmBJ,EAAS/H,EAAST,EAAQsJ,iBAAkBtJ,EAAQuJ,sBAGpGvJ,EAAQ6I,oBACRQ,EAAclJ,GAASwD,WAAWlD,EAAST,EAASqJ,GACpDhB,EAAiBa,EAAIlJ,EAAQ6I,kBAAoBL,EAAS/H,EAAST,EAAQwJ,kBAAmBxJ,EAAQyJ,uBAGtGzJ,EAAQ8I,mBACRO,EAAclJ,GAASwD,WAAWlD,EAAST,EAASqJ,GACpDhB,EAAiBc,EAAInJ,EAAQ8I,iBAAmBN,EAAS/H,EAAST,EAAQ0J,iBAAkB1J,EAAQ2J,sBAGxGxJ,GAASwD,WAAWlD,EAAST,EAASqJ,GAEtC5I,EAAQM,YAERN,EAAQ6H,IAAI,EAAG,EAAGxG,GAAIsH,GAAK,EAAQ,EAALvG,IAAQ,GAElC7C,EAAQ4J,eACRpG,EAAO/C,EAAQ2G,qBAAqB,EAAG,EAAGgC,EAAK,EAAG,EAAG,EAAGA,GACxD5F,EAAKE,aAAa,EAAG1D,EAAQ6J,YAC7BrG,EAAKE,aAAa,EAAG1D,EAAQ4J,gBAE7BpG,EAAOxD,EAAQ6J,WAGnBpJ,EAAQiH,UAAYlE,EAEpB/C,EAAQkH,OACRlH,EAAQU,YAERV,EAAQmD,UAWZ,QAASkG,GAAqBrJ,EAAST,GACnC,GAAI+J,GAAUtJ,EAAQ0E,KAAOvD,WAAW5B,EAAQgK,kBAAoB,GAAK,GAEzE,IAAKD,EAAL,CAGA,GAAIjJ,GAAIgB,GAAImI,EAAkBxJ,EAAST,GAAW+J,EAAU,GACxD5N,EAAI,EACJ8B,EAAI+B,EAAQkK,WAAW7N,OACvB8N,GAAMnK,EAAQM,SAAWN,EAAQK,UAAYL,EAAQoK,UAIzD,KAFA3J,EAAQoD,OAED1H,EAAI8B,EAAG9B,IAAK,CACf,GAAIkO,GAAMrK,EAAQkK,WAAW/N,EAE7BsE,GAAQM,YAERN,EAAQ6J,OAAOC,IACf9J,EAAQ6H,IAAI,EAAG,EAAGxH,EAAGX,GAASwC,QAAQ3C,EAAQwK,YAAcH,EAAI/N,KAAO0D,EAAQK,UAAY8J,GAAKhK,GAASwC,QAAQ3C,EAAQwK,YAAcH,EAAII,GAAKzK,EAAQK,UAAY8J,IAAK,GACzK1J,EAAQkE,YAAc0F,EAAIK,MAC1BjK,EAAQmE,UAAYmF,EACpBtJ,EAAQ8G,SACR9G,EAAQU,YAERV,EAAQmD,UACRnD,EAAQoD,SAYhB,QAAS8G,GAAqBlK,EAAST,GACnC,GAAI+C,GAASkH,EAAkBxJ,EAAST,GACpC/B,MAAI,GACJ2M,MAAQ,GACR5H,MAAQ,GACR7G,EAAI,EACJ0O,EAAQ,EACRC,EAAWjJ,KAAKC,IAAI9B,EAAQ+K,aAAe,EAC3CC,EAAQhL,EAAQoK,YAAcpK,EAAQM,SAAWN,EAAQK,SAe7D,KAbAI,EAAQmE,UAAY6D,GAAYC,WAChCjI,EAAQkE,YAAc3E,EAAQiL,iBAAmBjL,EAAQkL,iBAEzDzK,EAAQoD,OAEJ7D,EAAQmL,YACRP,EAAQ5K,EAAQM,SAAWN,EAAQK,SACnCpC,EAAI6M,EAAWF,EAAQE,EAAW,EAClCD,GAASO,GAAUC,IAAIrL,EAAQC,WAAW,GAAI6K,IAAa,GAAKE,GAEhE/M,EAAI6M,GAAY9K,EAAQC,WAAW5D,OAAS,GAGzCF,EAAI8B,IAAK9B,GACZ6G,EAAQhD,EAAQwK,WAAaK,EAAQ1O,GAAK6D,EAAQoK,WAAanM,KAClD+B,EAAQoK,WAAapK,EAAQwK,aACtC/J,EAAQ6J,OAAOnK,GAASwC,QAAQK,IAEhCvC,EAAQM,YACRN,EAAQO,OAAO,EAAG+B,GAClBtC,EAAQQ,OAAO,EAAG8B,EAAuB,KAAdtC,EAAQ0E,KACnCmG,EAAiB7K,IAc7B,QAASwJ,GAAkBxJ,EAAST,GAChC,GAAIuL,GAAO9K,EAAQ0E,IAAM,GAEzB,OAAOoD,GAAgB9H,EAAST,GAAW,EAAIuL,GAAQvL,EAAQwL,SAAuD,GAA3C5J,WAAW5B,EAAQyL,iBAAmB,KAAW7J,WAAW5B,EAAQwL,WAAa,GAAK,GAAKD,EAAO,GAUjL,QAASG,GAAqBjL,EAAST,GACnCG,GAASJ,aAAaC,EAGtB,IAAIc,GAAIgB,GAAImI,EAAkBxJ,EAAST,IACnC7D,MAAI,GACJwP,MAAS,GACT1N,EAAI+B,EAAQC,WAAW5D,OACvBqM,EAAaD,GAAYC,UAQ7B,KANAjI,EAAQmE,UAAY,EAAI8D,EACxBjI,EAAQoD,OAER8H,EAAS3L,EAAQ4L,0BAA2B3P,OAAQ+D,EAAQ4L,gBAAkB,GAAI3P,OAAMgC,GAAG0J,KAAK3H,EAAQkL,kBAAoBlL,EAAQ4L,iBAEpIzP,EAAI,EACGA,EAAI8B,IAAK9B,EACZsE,EAAQkE,YAAcgH,EAAOxP,GAC7BsE,EAAQ6J,OAAOnK,GAASwC,QAAQkJ,EAAgB7L,EAASA,EAAQmL,WAAanL,EAAQC,WAAW9D,GAAKA,EAAG8B,KAEzGwC,EAAQM,YACRN,EAAQO,OAAO,EAAGF,GAClBL,EAAQQ,OAAO,EAAGH,EAAkB,IAAdL,EAAQ0E,KAC9BmG,EAAiB7K,EAGjBT,GAAQ8L,cACRrL,EAAQkE,YAAc3E,EAAQkL,kBAAoBS,EAAO,GACzDlL,EAAQ6J,OAAOC,IAEf9J,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGxH,EAAGX,GAASwC,QAAQ3C,EAAQwK,YAAarK,GAASwC,QAAQ3C,EAAQwK,WAAaxK,EAAQoK,aAAa,GACtHkB,EAAiB7K,IAKzB,QAASoL,GAAgB7L,EAAS7D,EAAG8B,GACjC,GAAI+B,EAAQmL,WAAY,CACpB,GAAIH,GAAQhL,EAAQoK,YAAcpK,EAAQM,SAAWN,EAAQK,SAC7D,OAAOL,GAAQwK,WAAaQ,GAAS7O,EAAI6D,EAAQK,UAGrD,MAAOL,GAAQwK,WAAarO,GAAK6D,EAAQoK,YAAcnM,EAAI,IAS/D,QAASqN,GAAiB7K,GACtBA,EAAQ8G,SACR9G,EAAQmD,UACRnD,EAAQU,YACRV,EAAQoD,OAWZ,QAASkI,GAAkBtL,EAAST,GAChC,GAAI+C,GAASkH,EAAkBxJ,EAAST,GAAyB,IAAdS,EAAQ0E,IACvD6G,KACA7P,EAAI,EACJ8B,EAAI+B,EAAQC,WAAW5D,OACvB4P,EAAyC,WAA5BjM,EAAQkM,gBACrBP,EAAS3L,EAAQmM,uBAAwBlQ,OAAQ+D,EAAQmM,aAAe,GAAIlQ,OAAMgC,GAAG0J,KAAK3H,EAAQmM,cAElGC,EAAkBH,IAAejM,EAAQ7C,MAAQ6C,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,UAAYL,EAAQoK,WAAa,CAYtI,KAVI6B,IACAxL,EAAQoD,OACRpD,EAAQ6J,QAAQnK,GAASwC,QAAQyJ,KAGrC3L,EAAQ8D,KAAOpE,GAASoE,KAAKvE,EAAS,UAAWS,EAAQ0E,IAAM,KAC/D1E,EAAQmE,UAAY,EACpBnE,EAAQoH,UAAY,SACpBpH,EAAQqH,aAAe,SAEhB3L,EAAI8B,IAAK9B,EAAG,CACf,GAAI6G,GAAQoJ,EAAkBP,EAAgB7L,EAASA,EAAQmL,WAAanL,EAAQC,WAAW9D,GAAKA,EAAG8B,GACnGoO,EAAY5L,EAAQwF,YAAYjG,EAAQC,WAAW9D,IAAIgK,MACvDmG,EAAatM,EAAQuM,gBACrBC,EAAa3K,KAAK4K,KAAKJ,EAAYA,EAAYC,EAAaA,GAAc,EAC1EI,EAAQvM,GAAS2C,YAAYC,EAASyJ,EAAaxM,EAAQ2M,cAAgB,IAAMlM,EAAQ0E,IAAKhF,GAASwC,QAAQK,GAErG,OAAVA,IAAeA,EAAQ,GAEvBgJ,EAAOhJ,KAIXgJ,EAAOhJ,IAAS,EAEhBvC,EAAQiH,UAAYiE,EAAOxP,GAC3BsE,EAAQsH,SAAS/H,EAAQC,WAAW9D,GAAIuQ,EAAMhM,EAAGgM,EAAM/L,IAG3DsL,GAAcxL,EAAQmD,UAW1B,QAASgJ,GAAgBnM,EAAST,GACzBA,EAAQ6M,QAEbpM,EAAQoD,OACRpD,EAAQ8D,KAAOpE,GAASoE,KAAKvE,EAAS,QAASS,EAAQ0E,IAAM,KAC7D1E,EAAQiH,UAAY1H,EAAQ8M,WAC5BrM,EAAQoH,UAAY,SACpBpH,EAAQsH,SAAS/H,EAAQ6M,MAAO,GAAIpM,EAAQ0E,IAAM,KAAoB,GAAd1E,EAAQ0E,KAChE1E,EAAQmD,WAWZ,QAASmJ,GAAgBtM,EAAST,GACzBA,EAAQgN,QAEbvM,EAAQoD,OACRpD,EAAQ8D,KAAOpE,GAASoE,KAAKvE,EAAS,QAASS,EAAQ0E,IAAM,KAC7D1E,EAAQiH,UAAY1H,EAAQiN,WAC5BxM,EAAQoH,UAAY,SACpBpH,EAAQsH,SAAS/H,EAAQgN,MAAO,EAAGvM,EAAQ0E,IAAM,KAAoB,GAAd1E,EAAQ0E,KAC/D1E,EAAQmD,WAWZ,QAASsJ,GAAiBzM,EAAST,GAC/B,GAAKA,EAAQmN,OAAb,CAEA,GAAIhQ,GAAQ6C,EAAQoK,WAAa,IAAMjK,GAAS6H,gBAAgBhI,GAASoI,SAAWpI,EAAQ7C,MACxFgI,EAAMoD,EAAgB9H,EAAST,GAE/BkJ,EAAKpH,GAAIqD,EAAM,IAAMnF,EAAQoN,kBAE7BjE,EAAKrH,GAAIqD,EAAM,IAAMnF,EAAQoN,iBAAmB,KAEhDC,EAAMvL,GAAIqD,EAAM,IAAMnF,EAAQsN,WAE9BC,EAASzL,GAAI9B,EAAQwN,YAAcrI,EAAM,IAAMnF,EAAQwN,YAAc,GAErEC,EAAOtI,EAAM,IAAMnF,EAAQ0N,YAC3BC,EAAOxI,EAAM,IAAMnF,EAAQ0N,YAAc,EACzChF,EAAaD,GAAYC,WACzBkF,EAAsC,WAA5B5N,EAAQkM,eAEtBzL,GAAQoD,OAER1D,GAAS+D,iBAAiBzD,EAAST,GAEnCS,EAAQ6J,OAAOnK,GAASwC,QAAQiL,EAAU5N,EAAQwK,WAAaxK,EAAQwK,YAAcrN,EAAQ6C,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,UAAYL,EAAQoK,aAEjK3J,EAAQiH,UAAYvH,GAASgD,eAAe1C,EAAST,EAAQ6N,YAAa7N,EAAQ8N,eAAgBT,EAAME,GAE7E,UAAvBvN,EAAQ+N,YACRtN,EAAQM,YACRN,EAAQO,QAAQ2M,GAAOJ,GACvB9M,EAAQQ,QAAQwM,EAAM,GACtBhN,EAAQQ,QAAQ,EAAIyH,EAAY2E,GAChC5M,EAAQQ,OAAOyH,EAAY2E,GAC3B5M,EAAQQ,OAAOwM,EAAM,GACrBhN,EAAQQ,OAAO0M,GAAOJ,GACtB9M,EAAQU,YACRV,EAAQkH,OAERlH,EAAQM,YACRN,EAAQQ,QAAQ,GAAMyH,EAAY2E,GAClC5M,EAAQQ,QAAQ,EAAIyH,EAAY2E,GAChC5M,EAAQQ,QAAQwM,EAAM,GACtBhN,EAAQQ,QAAQ0M,GAAOJ,GACvB9M,EAAQQ,OAAO0M,EAAO,EAAIjF,EAAa,EAAIA,GAAa6E,GACxD9M,EAAQU,YACRV,EAAQiH,UAAY1H,EAAQgO,oBAC5BvN,EAAQkH,SAGRlH,EAAQM,YACRN,EAAQO,QAAQ2M,EAAMN,GACtB5M,EAAQQ,QAAQ0M,EAAMJ,GACtB9M,EAAQQ,OAAO0M,EAAMJ,GACrB9M,EAAQQ,OAAO0M,EAAMN,GACrB5M,EAAQU,YACRV,EAAQkH,QAGR3H,EAAQoN,mBACR3M,EAAQmD,UAERzD,GAAS+D,iBAAiBzD,EAAST,GAE/BA,EAAQiO,oBACRxN,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGY,EAAI,EAAQ,EAALrG,IAAQ,GACjCpC,EAAQiH,UAAYvH,GAASgD,eAAe1C,EAAST,EAAQkO,uBAAwBlO,EAAQmO,0BAA2BjF,GACxHzI,EAAQkH,OACRlH,EAAQU,aAGRnB,EAAQoO,oBACR3N,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGa,EAAI,EAAQ,EAALtG,IAAQ,GACjCpC,EAAQiH,UAAYvH,GAASgD,eAAe1C,EAAST,EAAQqO,uBAAwBrO,EAAQsO,0BAA2BnF,GACxH1I,EAAQkH,OACRlH,EAAQU,aAGZV,EAAQmD,YAYhB,QAAS2K,GAAmB9N,EAAST,EAAS7C,GAC1CgD,GAAS+E,aAAazE,EAAST,EAAS7C,EAAO,EAAGsD,EAAQ0E,IAAoB,IAAd1E,EAAQ0E,IAAY1E,EAAQ0E,KAUhG,QAASqJ,GAAsB/N,EAAST,GACpC,GAAIuL,GAAO9K,EAAQ0E,IAAM,IACrBsJ,EAAOlG,EAAgB9H,EAAST,GAAW,EAAIuL,EAC/CjF,EAAK1E,WAAW5B,EAAQyL,iBAAmB,EAC3C7K,GAAKgB,WAAW5B,EAAQwL,WAAa,GAAKD,EAC1CmD,EAAOD,EAAY,EAALnI,EAAS1F,EACvB+N,GAAQF,EAAOC,GAAQ,EACvB5N,EAAI4N,EAAOC,EACX9D,EAAQvE,EAAKxF,EACb8N,EAAK5O,EAAQwK,WACbqE,EAAK7O,EAAQwK,WAAaxK,EAAQoK,UAEtC3J,GAAQoD,OACRpD,EAAQ6J,OAAOC,IAEXjE,IAEA7F,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGxH,EAAGX,GAASwC,QAAQiM,GAAM/D,EAAO1K,GAASwC,QAAQkM,GAAMhE,GAAO,GACjFpK,EAAQkE,YAAc3E,EAAQ8O,eAC9BrO,EAAQmE,UAAmB,EAAP+J,EACpBlO,EAAQ8G,SACR9G,EAAQU,aAGRP,IAEAH,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGxH,EAAGX,GAASwC,QAAQiM,GAAKzO,GAASwC,QAAQkM,IAAK,GACjEpO,EAAQkE,YAAc3E,EAAQ+O,SAC9BtO,EAAQmE,UAAYhE,EACpBH,EAAQ8G,SACR9G,EAAQU,YAEJnB,EAAQgP,YAERvO,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGmG,EAAMtO,GAASwC,QAAQiM,GAAKzO,GAASwC,QAAQkM,IAAK,GACpEpO,EAAQwO,OAERxO,EAAQM,YACRN,EAAQkE,YAAc3E,EAAQ+O,SAC9BtO,EAAQmE,UAAY,EACpBnE,EAAQsD,WAAa/D,EAAQgP,UAC7BvO,EAAQuD,YAAchE,EAAQkP,eAC9BzO,EAAQ2D,cAAgB,EACxB3D,EAAQ4D,cAAgB,EACxB5D,EAAQ6H,IAAI,EAAG,EAAGmG,EAAMtO,GAASwC,QAAQ3C,EAAQwK,YAAarK,GAASwC,QAAQ3C,EAAQwK,WAAaxK,EAAQoK,aAAa,GACzH3J,EAAQ8G,SACR9G,EAAQU,YAERV,EAAQmD,UACRnD,EAAQ6J,OAAOC,KAIfvK,EAAQmP,cACR1O,EAAQM,YACRN,EAAQ6H,IAAI,EAAG,EAAGxH,EAAGX,GAASwC,QAAQiM,GAAKzO,GAASwC,QAAQiM,GAAMzO,GAAS6H,gBAAgBhI,GAASmI,OAASnI,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,UAAYL,EAAQoK,aAAa,GAC9L3J,EAAQkE,YAAc3E,EAAQoP,iBAC9B3O,EAAQmE,UAAYhE,EACpBH,EAAQ8G,SACR9G,EAAQU,cAIhBV,EAAQmD,UAQZ,QAASyL,GAAaC,GAClB,MAAIA,GAAMtP,QAAQuP,cACPD,EAAMtP,QAAQ7C,MAGlBmS,EAAMnS,MAyYjB,QAASqS,GAAc/O,EAASK,EAAGJ,EAAGC,EAAGC,EAAGC,EAAG4O,EAAYC,GACvDjP,EAAQM,YACRN,EAAQiH,UAAYgI,EAAWvP,GAASgD,eAAe1C,EAASgP,EAAYC,EAAU9O,EAAIC,EAAID,EAAIC,EAAGA,EAAID,EAAGA,EAAIC,EAAIH,EAAIC,GAAK8O,EAE7H3O,EAAI,EAAIX,GAASK,UAAUC,EAASC,EAAGC,EAAGC,EAAGC,EAAGC,GAAKL,EAAQyG,KAAKxG,EAAGC,EAAGC,EAAGC,GAE3EJ,EAAQkH,OACRlH,EAAQU,YAiBZ,QAASwO,GAAiBlP,EAAS0F,EAAOrF,EAAGJ,EAAGC,EAAGC,EAAGC,EAAG4O,EAAYC,GACjEjP,EAAQM,YACRN,EAAQmE,UAAYuB,EACpB1F,EAAQkE,YAAc+K,EAAWvP,GAASgD,eAAe1C,EAASgP,EAAYC,EAAU7O,GAAG,EAAMF,GAAK8O,EAEtG3O,EAAI,EAAIX,GAASK,UAAUC,EAASC,EAAGC,EAAGC,EAAGC,EAAGC,GAAKL,EAAQyG,KAAKxG,EAAGC,EAAGC,EAAGC,GAE3EJ,EAAQ8G,SACR9G,EAAQU,YAcZ,QAASyO,GAAgBnP,EAAST,EAASU,EAAGC,EAAGC,EAAGC,GAChD,GAAI2H,GAAUC,GAAYC,UAC1BjI,GAAQoD,MAER,IAAI/C,GAAId,EAAQ6P,aAAerH,EAC3BsH,EAAKlP,EAAIZ,EAAQ8D,kBAAoB9D,EAAQ4I,iBAAmBJ,EAChEuH,EAAKD,EAAK9P,EAAQ4I,iBAAmBJ,EAAUxI,EAAQ6I,kBAAoBL,EAC3EwH,EAAKD,EAAK/P,EAAQ6I,kBAAoBL,EAAUxI,EAAQ8I,iBAAmBN,EAC3EyH,EAAKD,EAAKhQ,EAAQ8I,iBAAmBN,EAErC0H,EAAKrP,EAAIb,EAAQ8D,kBAAoB9D,EAAQ4I,iBAAmBJ,EAChE2H,EAAKD,EAAKlQ,EAAQ4I,iBAAmBJ,EAAUxI,EAAQ6I,kBAAoBL,EAC3E4H,EAAKD,EAAKnQ,EAAQ6I,kBAAoBL,EAAUxI,EAAQ8I,iBAAmBN,EAC3E6H,EAAKD,EAAKpQ,EAAQ8I,iBAAmBN,EAErC8H,EAAK5P,GAAKqP,EAAKD,GAAM,EACrBS,EAAKD,GAAMN,EAAKD,GAAM,EACtBS,EAAKD,GAAMN,EAAKD,GAAM,EAEtBS,EAAK9P,GAAKwP,EAAKD,GAAM,EACrBQ,EAAKD,GAAML,EAAKD,GAAM,EACtBQ,EAAKD,GAAML,EAAKD,GAAM,EACtBQ,EAAiB,EACjBvH,GAAc,CA0BlB,OAxBIrJ,GAAQ4I,mBACRS,EAAclJ,GAASwD,WAAWlD,EAAST,EAASqJ,GACpDsG,EAAiBlP,EAAST,EAAQ4I,iBAAmBJ,EAAS1H,EAAGJ,EAAIV,EAAQ4I,iBAAmBJ,EAAU,EAAIoI,EAAgBjQ,EAAIX,EAAQ4I,iBAAmBJ,EAAU,EAAIoI,EAAgBd,EAAII,EAAIlQ,EAAQsJ,iBAAkBtJ,EAAQuJ,qBACrOqH,GAAkB,GAAMpI,GAGxBxI,EAAQ6I,oBACRQ,EAAclJ,GAASwD,WAAWlD,EAAST,EAASqJ,GACpDsG,EAAiBlP,EAAST,EAAQ6I,kBAAoBL,EAAS1H,GAAK,EAAqB,EAAjB8P,EAAoBN,EAAKtQ,EAAQ6I,kBAAoBL,EAAU,EAAIoI,EAAgBH,EAAKzQ,EAAQ6I,kBAAoBL,EAAU,EAAIoI,EAAgBb,EAAsB,EAAjBa,EAAoBT,EAAsB,EAAjBS,EAAoB5Q,EAAQwJ,kBAAmBxJ,EAAQyJ,sBAC/SmH,GAAkB,GAAMpI,GAGxBxI,EAAQ8I,mBACRO,EAAclJ,GAASwD,WAAWlD,EAAST,EAASqJ,GACpDsG,EAAiBlP,EAAST,EAAQ8I,iBAAmBN,EAAS1H,GAAK,EAAqB,EAAjB8P,EAAoBL,EAAKvQ,EAAQ8I,iBAAmBN,EAAU,EAAIoI,EAAgBF,EAAK1Q,EAAQ8I,iBAAmBN,EAAU,EAAIoI,EAAgBZ,EAAsB,EAAjBY,EAAoBR,EAAsB,EAAjBQ,EAAoB5Q,EAAQ0J,iBAAkB1J,EAAQ2J,qBAC3SiH,GAAkB,GAAMpI,GAG5BrI,GAASwD,WAAWlD,EAAST,EAASqJ,GAEtCmG,EAAc/O,EAASK,EAAG0P,EAAIG,EAAIV,EAAsB,EAAjBW,EAAoBP,EAAsB,EAAjBO,EAAoB5Q,EAAQ6J,WAAY7J,EAAQ4J,eAEhHnJ,EAAQmD,WAEA4M,EAAIG,EAAIV,EAAII,GAexB,QAASQ,GAAcpQ,EAAST,EAASU,EAAGC,EAAGC,EAAGC,GAC9C,GAAI6H,GAAaD,GAAYC,WACzBpF,EAAazC,GAAKD,EAClBuF,EAAQ7C,EAAiB,IAAJ1C,EAAWC,EAChCxE,EAASiH,EAAazC,EAAID,CAG9BF,GAAI4C,EAAapB,GAAMxB,GAAKE,EAAIuF,GAAS,GAAKzF,CAE9C,IAAIoQ,KAAa9Q,EAAQ6M,MACrBkE,IAAa/Q,EAAQgN,MACrBgE,IAAahR,EAAQoF,SAErB6L,MAAc,GACdC,MAAc,GACdC,MAAc,EAEd7N,IAEA4N,EAAchP,GAAe,IAAT7F,GAEpB4U,EAAc/O,GAAe,KAAT7F,GAEpB8U,EAAcjP,GAAe,IAAT7F,GAEhByU,IACAzU,GAAU4U,EACVtQ,GAAKsQ,GAGLF,IAAU1U,GAAU6U,GACpBF,IAAU3U,GAAU8U,KAGxBD,EAAcD,EAAc/O,GAAc,IAARiE,GAE9B2K,IACA3K,GAAS8K,EACTtQ,GAAKsQ,GAGLF,IAAU5K,GAAS+K,GAG3B,IAAIE,GAAuC,EAAzBpR,EAAQyL,eAEtB1I,EAAS/C,EAAQqR,eAAiBnP,GAAMiE,EAAQnG,EAAQqR,eAAiB,IAAMD,EAAc,GAAK,EAElG5F,EAAWtJ,GAAMiE,EAAQnG,EAAQwL,SAAW,IAAM4F,GAElDE,EAAYpP,GAAM7F,EAAS2D,EAAQsR,UAAY,IAAMF,GAErDG,EAAYrP,IAAO7F,EAASiV,GAAa,GAIzCE,EAAKtP,GAAMxB,GAAK4C,EAAa6C,EAAQ,EAAIoL,EAAYxO,IAErD0O,EAAKvP,GAAMvB,GAAK2C,EAAajH,EAASkV,EAAYxO,EAASqO,EAAc,EAAIjL,EAAQ,IACrFuL,GAAKpO,GAAgBtD,EAAQ2R,SAAW3R,EAAQ4R,SAA6E,GAAhE5R,EAAQ4R,UAAY,EAAI,GAAK5R,EAAQ6R,WAAa,IAAM1L,EACrH2L,EAAMxO,GAAgBtD,EAAQ2R,SAAW3R,EAAQ4R,SAA6E,GAAhE5R,EAAQ4R,UAAY,EAAI,GAAK5R,EAAQ6R,WAAa,IAAM1L,CA4B1H,OAzBA1F,GAAQoQ,eACJvN,WAAYA,EACZ6C,MAAOA,EACP9J,OAAQA,EACRmP,SAAUA,EACV8F,UAAWA,EACXF,YAAaA,EACbG,UAAWA,EACXxO,OAAQA,EACR2F,WAAYA,EACZqJ,UAAW,KACXd,YAAaH,EAAWG,EAAc,EACtCC,YAAaH,EAAWG,EAAc,EACtCc,kBACI,MAAOvS,MAAK6R,UAAY7R,KAAKsS,UAAYtS,KAAK2R,aAElDa,EAAGvR,EAAIgR,EACPQ,EAAGvR,EAAImR,EACPN,GAAIA,EAAKE,EACTD,GAAIA,EAAKK,EACTK,MAAOzR,EACP0R,MAAOzR,EACP0R,aAAcrS,EAAQqS,aAAe,KAGlC5R,EAAQoQ,cAgBnB,QAASyB,GAAmB7R,EAAST,EAASuS,EAAM7R,EAAGC,EAAGC,EAAGC,GACzD,GAAI2R,GAAiB3B,EAAcpQ,EAAST,EAASU,EAAGC,EAAGC,EAAGC,GAC1DyC,EAAakP,EAAelP,WAC5B6C,EAAQqM,EAAerM,MACvBqF,EAAWgH,EAAehH,SAC1B8F,EAAYkB,EAAelB,UAC3BF,EAAcoB,EAAepB,YAC7BG,EAAYiB,EAAejB,UAC3BxO,EAASyP,EAAezP,OACxByO,EAAKgB,EAAehB,GACpBC,EAAKe,EAAef,GACpBQ,EAAIO,EAAeP,EACnBC,EAAIM,EAAeN,EAEnBO,EAAgBnB,CAKpB,IAHA7Q,EAAQoD,OACRpD,EAAQM,YAEJf,EAAQqR,eAAgB,CACxB,GAAIqB,GAAYvS,GAASwC,QAAQW,EAAa,IAAM,GAChDqP,EAAQ9Q,KAAK+Q,KAAKpH,EAAW,EAAIzI,GACjC8P,EAAWhR,KAAKqB,IAAIyP,GACpBG,EAAWjR,KAAKoB,IAAI0P,GAEpBI,EAAKvB,GAAMlO,EAAaP,EAAS+P,EAAW/P,EAAS8P,EAAWzB,EAAc,GAC9E4B,EAAK1P,EAAamO,EAAK1O,EAAS8P,EAAWpB,EAAK1O,EAAS+P,EAEzDG,EAAyBnR,GAAbwB,EAAiB0P,EAAKvB,EAAUsB,EAAKvB,EAGrD/Q,GAAQoQ,cAAckB,UAAY7P,GAAM+Q,EAAYlQ,EAIpD,IAAIuN,GAAKhN,EAAapB,GAAMsP,EAAKzO,EAAS+P,GAAYC,EAElDtC,EAAKnN,EAAa0P,EAAK9Q,GAAMuP,EAAK1O,EAAS+P,EAElC,cAATP,IACAjB,EAAY7Q,EAAQoQ,cAAckB,WAAaT,EAAY7Q,EAAQoQ,cAAckB,YAAc5R,GAAS6H,gBAAgBhI,GAASmI,OAASnI,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,UAK9L,IAAIkQ,GAAKrO,GAAM6Q,EAAKzB,EAAY7Q,EAAQoQ,cAAckB,UAAYX,EAAc,GAE5EV,EAAKxO,GAAM8Q,EAAK1B,EAAY7Q,EAAQoQ,cAAckB,UAAYX,EAAc,EAEhF3Q,GAAQ6H,IAAIkJ,EAAIC,EAAI1O,EAAQ2P,EAAYC,EAAOD,EAAYC,GAEvDrP,GACA7C,EAAQO,OAAO+R,EAAItC,GACnBhQ,EAAQQ,OAAO8R,EAAIrC,GACnBjQ,EAAQQ,OAAOqP,EAAII,GACnBjQ,EAAQQ,OAAOqP,EAAIG,KAEnBhQ,EAAQO,OAAO+R,EAAItC,GACnBhQ,EAAQQ,OAAOsP,EAAIE,GACnBhQ,EAAQQ,OAAOsP,EAAIyC,GACnBvS,EAAQQ,OAAO8R,EAAIC,QAEpB,CAGH,GAAIE,GAAKhR,GAAMoB,EAAa2O,GAAK9L,EAAQqF,GAAY,EAAIyG,EAAIV,GAEzD4B,EAAKjR,GAAMoB,EAAa4O,EAAIZ,EAAYC,EAAYW,GAAK/L,EAAQqF,GAAY,EAEpE,cAAT+G,IACAjB,IAActR,EAAQ7C,MAAQ6C,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,WAG9EiD,EAAY7C,EAAQyG,KAAKgM,EAAIC,EAAI3H,GAAW8F,GAAgB7Q,EAAQyG,KAAKgM,EAAIC,EAAI7B,EAAW9F,GAGvF,aAAT+G,GAAuBvS,EAAQyL,iBAC/BhL,EAAQmE,UAAYwM,EACpB3Q,EAAQkE,YAAc3E,EAAQ8O,eAE9BrO,EAAQ8G,UAGC,aAATgL,GAAuBvS,EAAQ+O,UAC/BtO,EAAQiH,UAAY1H,EAAQoT,YAAcjT,GAASgD,eAAe1C,EAAST,EAAQ+O,SAAU/O,EAAQoT,YAAa9B,EAAWhO,EAAYA,EAAa4O,EAAID,GAAKjS,EAAQ+O,SACvKtO,EAAQkH,QACQ,aAAT4K,GAAuBvS,EAAQoP,mBACtC3O,EAAQiH,UAAY1H,EAAQqT,oBAAsBlT,GAASgD,eAAe1C,EAAST,EAAQoP,iBAAkBpP,EAAQqT,oBAAqBZ,EAAenP,EAAYA,EAAa4O,EAAID,GAAKjS,EAAQoP,iBACnM3O,EAAQkH,QAGZlH,EAAQU,YAGJnB,EAAQqR,iBAAgB5Q,EAAQoQ,cAAc9N,QAAUqO,GAE5D3Q,EAAQoQ,cAAcrF,UAAY4F,EAClC3Q,EAAQoQ,cAAcS,WAAaF,EAavC,QAASkC,GAAc7S,EAAST,EAASU,EAAGC,EAAGC,EAAGC,GAC9CyR,EAAmB7R,EAAST,EAAS,GAAIU,EAAGC,EAAGC,EAAGC,GAWtD,QAAS0S,GAAYC,EAAUxT,GAC3B,MAAOA,GAAQyT,aAAeD,GAAYxT,EAAQO,WAAaiT,GAAYxT,EAAQ0T,aAAeF,EActG,QAASG,GAAsBlT,EAAST,EAASU,EAAGC,EAAGC,EAAGC,GACtDb,EAAQmP,aAAemD,EAAmB7R,EAAST,EAAS,WAAYU,EAAGC,EAAGC,EAAGC,GAUrF,QAAS+S,GAAwBnT,EAAST,GACtC,GAAI6T,GAAwBpT,EAAQoQ,cAChCvN,EAAauQ,EAAsBvQ,WACnC6C,EAAQ0N,EAAsB1N,MAC9B9J,EAASwX,EAAsBxX,OAC/BmP,EAAWqI,EAAsBrI,SACjCuG,EAAY8B,EAAsB9B,UAClCR,EAAYsC,EAAsBtC,UAClCU,EAAI4B,EAAsB5B,EAC1BC,EAAI2B,EAAsB3B,EAC1BF,EAAc6B,EAAsB7B,YACpCK,EAAewB,EAAsBxB,aAErCtI,EAAU5D,GAASvE,WAAW5B,EAAQgK,kBAAoB,GAAK,GAEnE,IAAKhK,EAAQkK,YAAeH,EAA5B,CAEA,GAAI4H,GAA+B,UAArB3R,EAAQO,SAClBqR,EAAgC,SAArB5R,EAAQO,SACnBpE,EAAI,EACJ8B,EAAI+B,EAAQkK,WAAW7N,OACvByX,GAAc3N,EAAQqF,GAAY,EAClCuI,EAAW/T,EAAQM,SAAWN,EAAQK,SAEtC2T,EAAK9R,GAAMoB,EAAa2O,EAAI6B,EAAa7B,EAAIV,EAAYQ,GACzDkC,EAAKlK,EACLmK,EAAK5Q,EAAa4O,EAAI7V,EAASkV,EAAYQ,EAAYG,EAAI4B,EAE3DK,EAAQjS,IAAOlC,EAAQ6R,WAAa,IAAMQ,GAAgBlM,IAAU4D,EAAU/J,EAAQ6R,WAAa,IAAM1L,GAEzGiO,EAASlS,GAAMsJ,EAAW6G,EAAelM,EAI7C,KAFA1F,EAAQoD,OAED1H,EAAI8B,EAAG9B,IAAK,CACf,GAAIkY,GAAQrU,EAAQkK,WAAW/N,GAE3BmY,EAAStC,EAAclQ,GAAI9B,EAAQK,SAAWgU,EAAM/X,MAAQyX,EAE5DQ,EAAKvC,EAAclQ,IAAKuS,EAAM5J,GAAK4J,EAAM/X,MAAQyX,EAErDtT,GAAQM,YACRN,EAAQiH,UAAY2M,EAAM3J,MAEtBpH,GACIqO,GAASlR,EAAQyG,KAAK8M,EAAKG,EAAOD,EAAKI,EAAQL,GAAKM,GAEpD3C,GAAUnR,EAAQyG,KAAK8M,EAAKI,EAAQF,EAAKI,EAAQL,GAAKM,KAEtD5C,GAASlR,EAAQyG,KAAK8M,EAAKM,EAAQJ,EAAKC,EAAOI,EAAIN,GAEnDrC,GAAUnR,EAAQyG,KAAK8M,EAAKM,EAAQJ,EAAKE,EAAQG,EAAIN,IAG7DxT,EAAQkH,OACRlH,EAAQU,cAchB,QAASqT,GAAe/T,EAASsS,EAAIC,EAAI1C,EAAIG,GACzChQ,EAAQM,YAERN,EAAQO,OAAO+R,EAAIC,GACnBvS,EAAQQ,OAAOqP,EAAIG,GACnBhQ,EAAQ8G,SAER9G,EAAQU,YACRV,EAAQoD,OAiBZ,QAAS4Q,GAAgBhU,EAASiK,EAAOgK,EAAOC,EAAQC,EAAQjD,EAASC,EAAUhN,EAAWiQ,GAC1F,GAAIC,GAAyBrU,EAAQoQ,cACjCvN,EAAawR,EAAuBxR,WACpCjH,EAASyY,EAAuBzY,OAChCmP,EAAWsJ,EAAuBtJ,SAClCuG,EAAY+C,EAAuB/C,UACnCR,EAAYuD,EAAuBvD,UACnC7I,EAAaoM,EAAuBpM,WACpCvC,EAAQ2O,EAAuB3O,MAC/B8L,EAAI6C,EAAuB7C,EAC3BC,EAAI4C,EAAuB5C,EAC3BF,EAAc8C,EAAuB9C,YACrCK,EAAeyC,EAAuBzC,aAEtCyB,GAAc3N,EAAQqF,GAAY,EAClCuJ,MAAQ,GACRC,MAAQ,GACR7Y,EAAI,EACJ8B,EAAIyW,EAAMrY,OACVgF,MAAM,GACN4T,EAAUJ,EAAa1O,EACvB+O,EAAWpB,EAAazB,EAAelM,EACvCgP,EAAYrB,EAAatI,EAAWyJ,EAAU5C,EAAelM,EAC7DwF,EAASjB,YAAiBzO,OAAQyO,EAAQ,GAAIzO,OAAMyY,EAAMrY,QAAQsL,KAAK+C,EAE3EjK,GAAQmE,UAAYA,EAAY8D,EAChCjI,EAAQoD,MAGR,KADA,GAAImH,GAAQgH,GAAe4C,EAASD,GAC7BxY,EAAI8B,EAAG9B,IACVkF,EAAMqT,EAAMvY,GACZsE,EAAQkE,YAAcgH,EAAOxP,GAEzBmH,GACA0R,EAAQ9C,EAAI7V,EAASkV,EAAYQ,GAAa4C,EAAStT,GAAO2J,EAE1D2G,IACAoD,EAAQ9C,EAAIiD,EAEZV,EAAe/T,EAASsU,EAAOC,EAAO9S,GAAM6S,EAAQE,GAAUD,IAG9DpD,IACAmD,EAAQ9C,EAAIkD,EAEZX,EAAe/T,EAASsU,EAAOC,EAAO9S,GAAM6S,EAAQE,GAAUD,MAGlED,EAAQ9C,EAAIV,EAAYQ,GAAa4C,EAAStT,GAAO2J,EAEjD2G,IACAqD,EAAQ9C,EAAIgD,EAEZV,EAAe/T,EAASsU,EAAOC,EAAOD,EAAO7S,GAAM8S,EAAQC,KAG3DrD,IACAoD,EAAQ9C,EAAIiD,EAEZX,EAAe/T,EAASsU,EAAO7S,GAAM8S,GAAQD,EAAOC,EAAQC,KAa5E,QAASG,GAAqB3U,EAAST,GACnC,GAAIqV,GAAwBlV,GAASJ,aAAaC,GAC9CsV,EAAyBC,GAAeF,EAAuB,GAC/D1D,EAAU2D,EAAuB,GACjC1D,EAAW0D,EAAuB,GAElC1Q,EAAY,EACZ4Q,GAAwBxV,EAAQM,SAAWN,EAAQK,WAAaL,EAAQC,WAAW5D,OAAS,GAC5FsP,EAAS3L,EAAQ4L,0BAA2B3P,OAAQ+D,EAAQ4L,gBAAkB,GAAI3P,OAAM+D,EAAQC,WAAW5D,QAAQsL,KAAK3H,EAAQkL,kBAAoBlL,EAAQ4L,gBAOhK,IAFA6I,EAAgBhU,EAASkL,EAJb3L,EAAQmL,WAAanL,EAAQC,WAAaD,EAAQC,WAAW0F,IAAI,SAAU8P,EAAMtZ,GACzF,MAAO6D,GAAQK,SAAWmV,EAAuBrZ,IAGb6D,EAAQK,SAAUL,EAAQM,SAAUqR,EAASC,EAAUhN,EAAW5E,EAAQ6R,WAAa,KAE3H7R,EAAQ8L,YAAa,CACrB,GAAI4J,GAAyBjV,EAAQoQ,cACjCvN,EAAaoS,EAAuBpS,WACpCjH,EAASqZ,EAAuBrZ,OAChC8J,EAAQuP,EAAuBvP,MAC/BqF,EAAWkK,EAAuBlK,SAClC+F,EAAYmE,EAAuBnE,UACnCQ,EAAY2D,EAAuB3D,UACnCE,EAAIyD,EAAuBzD,EAC3BC,EAAIwD,EAAuBxD,EAC3BF,EAAc0D,EAAuB1D,YACrCtJ,EAAagN,EAAuBhN,WACpC2J,EAAeqD,EAAuBrD,aAEtCsD,GAAcxP,EAAQqF,GAAY,EAAIA,EAAW6G,EAAelM,EAChEyP,GAAazP,EAAQqF,GAAY,EAAI6G,EAAelM,EACpD0P,MAAK,GACLC,MAAK,GACL9B,MAAK,GACLE,MAAK,EAETzT,GAAQkE,YAAc3E,EAAQkL,kBAAoBS,EAAO,GAEzD/G,GAAa8D,EAETpF,GACAwS,EAAK5D,EAAI7V,EAASkV,EAAYQ,EAAYnN,EAAY,EACtDsP,EAAK4B,EAAK9D,EAAcpN,EAEpB+M,IAEAqC,EAAK6B,EAAK3T,GAAM+P,EAAI2D,GACpBG,EAAqBtV,EAASoV,EAAIC,EAAI9B,EAAIE,IAG1CtC,IAEAoC,EAAK6B,EAAK3T,GAAM+P,EAAI0D,GACpBI,EAAqBtV,EAASoV,EAAIC,EAAI9B,EAAIE,MAG9C2B,EAAK5D,EAAIV,EAAYQ,EAAYnN,EAAY,EAC7CoP,EAAK6B,EAAK7D,EAAcpN,EAEpB+M,IAEAuC,EAAK4B,EAAK5T,GAAMgQ,EAAI0D,GACpBG,EAAqBtV,EAASoV,EAAIC,EAAI9B,EAAIE,IAG1CtC,IAEAsC,EAAK4B,EAAK5T,GAAMgQ,EAAIyD,GACpBI,EAAqBtV,EAASoV,EAAIC,EAAI9B,EAAIE,MAgB1D,QAAS6B,GAAqBtV,EAASoV,EAAIC,EAAI9B,EAAIE,GAC/CzT,EAAQM,YACRN,EAAQO,OAAO6U,EAAIC,GACnBrV,EAAQQ,OAAO+S,EAAIE,GACnBzT,EAAQ8G,SACR9G,EAAQU,YAUZ,QAAS6U,GAAqBvV,EAAST,GACnC,GAAIiW,GAAyB9V,GAASJ,aAAaC,GAC/CkW,EAAyBX,GAAeU,EAAwB,GAChEtE,EAAUuE,EAAuB,GACjCtE,EAAWsE,EAAuB,GAElCxB,KACAvY,EAAI6D,EAAQK,SACZyK,EAAWjJ,KAAKC,IAAI9B,EAAQ+K,aAAe,EAC3CyK,EAAuB1K,GAAY9K,EAAQM,SAAWN,EAAQK,WAAayK,GAAY9K,EAAQC,WAAW5D,OAAS,IAAM,CAE7H,IAAIyO,EACA,GAAI9K,EAAQmL,WAGR,IAFA,GAAIN,GAAQO,GAAUC,IAAIrL,EAAQC,WAAW,GAAI6K,IAAa,EAEvD3O,EAAI6D,EAAQM,SAAUnE,GAAK2O,EAC1BD,EAAQ1O,EAAI6D,EAAQM,UACpBoU,EAAMxU,KAAK2K,EAAQ1O,OAI3B,MAAOA,EAAI6D,EAAQM,SAAUnE,GAAKqZ,EAC9Bd,EAAMxU,KAAK/D,EAKvBsY,GAAgBhU,EAAST,EAAQiL,iBAAmBjL,EAAQkL,iBAAkBwJ,EAAO1U,EAAQK,SAAUL,EAAQM,SAAUqR,EAASC,EAAU,EAAG5R,EAAQmW,gBAAkB,KAU7K,QAASC,GAA4B3V,EAAST,GAC1C,GAAIqW,GAAyB5V,EAAQoQ,cACjCvN,EAAa+S,EAAuB/S,WACpCjH,EAASga,EAAuBha,OAChC8J,EAAQkQ,EAAuBlQ,MAC/BqF,EAAW6K,EAAuB7K,SAClC+F,EAAY8E,EAAuB9E,UACnCQ,EAAYsE,EAAuBtE,UACnCE,EAAIoE,EAAuBpE,EAC3BC,EAAImE,EAAuBnE,EAC3BF,EAAcqE,EAAuBrE,YACrCK,EAAegE,EAAuBhE,aAEtCzH,EAAQ5K,EAAQM,SAAWN,EAAQK,SACnCmV,EAAuB5K,GAAS5K,EAAQC,WAAW5D,OAAS,GAC5Dia,EAAatW,EAAQmL,WAAanL,EAAQC,WAAaD,EAAQC,WAAW0F,IAAI,SAAU8P,EAAMtZ,GAC9F,MAAO6D,GAAQK,SAAWmV,EAAuBrZ,IAEjDuY,EAAQ4B,EAAWja,OACnBsV,EAAiC,UAAvB3R,EAAQ0T,WAClB9B,EAAkC,SAAvB5R,EAAQ0T,WACnBpH,EAAatM,EAAQuM,gBAAkBpG,EAAQ,IAC/ChK,EAAI,EACJ0V,GAAc7R,EAAQ6R,WAAa,IAAqB,EAAfQ,GAAoBlM,EAC7DoQ,GAAWpQ,EAAQqF,GAAY,EAAIqG,EACnC2E,GAAYrQ,EAAQqF,GAAY,EAAIA,EAAWqG,EAC/C4E,MAAQ,GACRC,MAAQ,GAERC,MAAe,GACflB,MAAO,GACP9J,EAAS3L,EAAQmM,uBAAwBlQ,OAAQ+D,EAAQmM,aAAe,GAAIlQ,OAAMyY,GAAO/M,KAAK3H,EAAQmM,cACtGyK,EAAa5W,EAAQ2M,cAAgB,IAAMxG,CAM/C,KAJA1F,EAAQ8D,KAAOpE,GAASoE,KAAKvE,EAAS,UAAWmG,EAAQ,KACzD1F,EAAQmE,UAAY,EACpBnE,EAAQoH,UAAY,SAEb1L,EAAIuY,EAAOvY,IACdsE,EAAQiH,UAAYiE,EAAOxP,GAC3BsZ,EAAOzV,EAAQC,WAAW9D,GAC1Bwa,EAAe3W,EAAQmL,WAAa6G,IAAgBsE,EAAWna,GAAK6D,EAAQK,UAAYuK,GAASzO,EAAI6V,GAAe0C,EAAQ,GAExHpR,GACAoT,EAAQxE,EAAI7V,EAASkV,EAAYQ,EAAY4E,EAAerK,EAAa,EAErEqF,IACAlR,EAAQoH,UAAY,QACpBpH,EAAQsH,SAAS0N,EAAMxD,EAAIsE,EAAUK,EAAYF,IAGjD9E,IACAnR,EAAQoH,UAAY,OACpBpH,EAAQsH,SAAS0N,EAAMxD,EAAIuE,EAAWI,EAAYF,MAG1CjW,EAAQwF,YAAYwP,GAAMtP,MACtCsQ,EAAQxE,EAAIV,EAAYQ,EAAY4E,EAEhChF,GACAlR,EAAQsH,SAAS0N,EAAMgB,EAAOvE,EAAIqE,EAAUK,GAG5ChF,GACAnR,EAAQsH,SAAS0N,EAAMgB,EAAOvE,EAAIsE,EAAWlK,EAAasK,IAa1E,QAASC,IAAgBpW,EAAST,GAC9B,GAAKA,EAAQ6M,MAAb,CAEA,GAAIiK,GAAyBrW,EAAQoQ,cACjCvN,EAAawT,EAAuBxT,WACpC6C,EAAQ2Q,EAAuB3Q,MAC/B9J,EAASya,EAAuBza,OAChC8V,EAAQ2E,EAAuB3E,MAC/BC,EAAQ0E,EAAuB1E,MAC/BnB,EAAc6F,EAAuB7F,YAErC3E,EAAatM,EAAQ+W,cAAgB5Q,EAAQ,IAE7CsQ,EAAQvU,GAAMiQ,GAAS7O,EAAa6C,EAAQ9J,GAAU,GAEtDqa,EAAQxU,GAAMkQ,EAAQnB,EAAc,GAAK3N,EAAagJ,EAAaA,EAAa,GAAK,MAAShJ,EAAajH,EAAS8J,GAExH1F,GAAQoD,OACRpD,EAAQoH,UAAY,SACpBpH,EAAQiH,UAAY1H,EAAQ8M,WAC5BrM,EAAQ8D,KAAOpE,GAASoE,KAAKvE,EAAS,QAASmG,EAAQ,KACvD1F,EAAQmE,UAAY,EACpBnE,EAAQsH,SAAS/H,EAAQ6M,MAAO4J,EAAOC,EAAOpT,EAAa6C,EAAQ9J,IAUvE,QAAS2a,IAAgBvW,EAAST,GAC9B,GAAKA,EAAQgN,MAAb,CAEA,GAAIiK,GAAyBxW,EAAQoQ,cACjCvN,EAAa2T,EAAuB3T,WACpC6C,EAAQ8Q,EAAuB9Q,MAC/B9J,EAAS4a,EAAuB5a,OAChC8V,EAAQ8E,EAAuB9E,MAC/BC,EAAQ6E,EAAuB7E,MAC/BlB,EAAc+F,EAAuB/F,YAErC5E,EAAatM,EAAQkX,cAAgB/Q,EAAQ,IAE7CsQ,EAAQvU,GAAMiQ,GAAS7O,EAAa6C,EAAQ9J,GAAU,GAEtDqa,EAAQxU,GAAMkQ,GAAS9O,EAAajH,EAAS8J,GAAS+K,EAAc,EAAI5E,EAAa,EAEzF7L,GAAQoD,OACRpD,EAAQoH,UAAY,SACpBpH,EAAQiH,UAAY1H,EAAQiN,WAC5BxM,EAAQ8D,KAAOpE,GAASoE,KAAKvE,EAAS,QAASmG,EAAQ,KACvD1F,EAAQmE,UAAY,EACpBnE,EAAQsH,SAAS/H,EAAQgN,MAAOyJ,EAAOC,EAAOpT,EAAa6C,EAAQ9J,IAUvE,QAAS8a,IAAoB1W,EAAST,GAClC,GAAKA,EAAQmN,OAAb,CAEA,GAAIiK,GAAyB3W,EAAQoQ,cACjCvN,EAAa8T,EAAuB9T,WACpC6C,EAAQiR,EAAuBjR,MAC/B9J,EAAS+a,EAAuB/a,OAChCmP,EAAW4L,EAAuB5L,SAClCuG,EAAYqF,EAAuBrF,UACnCR,EAAY6F,EAAuB7F,UACnCS,EAAcoF,EAAuBpF,YACrCC,EAAImF,EAAuBnF,EAC3BC,EAAIkF,EAAuBlF,EAC3BG,EAAe+E,EAAuB/E,aAEtCV,EAAiC,UAAvB3R,EAAQyT,WAClB7B,EAAkC,SAAvB5R,EAAQyT,WACnB4D,EAAWrF,GAAe7R,GAAS6H,gBAAgBhI,GAASoI,SAAWpI,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,UACvHiX,GAAatX,EAAQ6R,WAAa,IAAMQ,GAAgBlM,EACxDoR,EAAa/L,EAAW,EAAI8L,EAC5BE,EAAeD,GAAcvX,EAAQsN,UAAY,KACjDuI,MAAK,GACL7B,MAAK,GACL8B,MAAK,GACL5B,MAAK,GACLzV,EAA4C,UAArCuB,EAAQ+N,WAAW0J,cAA4BC,GAAwBC,GAC9EC,GAAYzR,EAAQqF,GAAY,EAChCgC,EAAc+J,GAAcvX,EAAQwN,YAAc,KAClDqK,EAAQD,EAAWN,EAAY9J,EAC/BsK,EAASF,EAAWpM,EAAW8L,EAAY9J,CAE/C/M,GAAQoD,OAER1D,GAAS+D,iBAAiBzD,EAAST,GAE/BsD,GAEAwS,EAAK5T,GAAMgQ,EAAI7V,EAASkV,EAAYQ,EAAYsF,GAE5C1F,IAEAkE,EAAK3T,GAAM+P,EAAI4F,GACf7D,EAAK6B,EAAK2B,EACV/Y,EAAKgC,EAAST,EAAS6V,EAAIC,EAAI9B,EAAI8B,EAAI0B,IAGvC5F,IAEAiE,EAAK3T,GAAM+P,EAAI6F,GACf9D,EAAK6B,EAAK2B,EACV/Y,EAAKgC,EAAST,EAAS6V,EAAIC,EAAI9B,EAAI8B,EAAI0B,GAAc,MAIzD3B,EAAK3T,GAAM+P,EAAIV,EAAYQ,EAAYsF,GAEnC1F,IAEAmE,EAAK5T,GAAMgQ,EAAI2F,GACf3D,EAAK4B,EAAK0B,EACV/Y,EAAKgC,EAAST,EAAS6V,EAAIC,EAAID,EAAI3B,EAAIsD,IAGvC5F,IAEAkE,EAAK5T,GAAMgQ,EAAI4F,GACf5D,EAAK4B,EAAK0B,EACV/Y,EAAKgC,EAAST,EAAS6V,EAAIC,EAAID,EAAI3B,EAAIsD,GAAc,KAI7D/W,EAAQmD,WAcZ,QAASmU,IAAYtX,EAAST,EAAS3D,EAAQ2b,GAC3C,MAAOhY,GAAQ8N,eAAiB3N,GAASgD,eAAe1C,EAASuX,EAAUhY,EAAQ8N,eAAiB9N,EAAQ6N,YAAamK,EAAUhY,EAAQ6N,YAAc7N,EAAQ8N,eAAgBzR,GAASoE,EAAQoQ,cAAcvN,YAActD,EAAQ6N,YAiB1O,QAAS8J,IAAqBlX,EAAST,EAAS6V,EAAIC,EAAI9B,EAAIE,EAAI7X,EAAQ2b,GACpEvX,EAAQmE,UAAY5E,EAAQ0N,YAC5BjN,EAAQkE,YAAcoT,GAAYtX,EAAST,EAAS3D,EAAQ2b,GAE5DvX,EAAQM,YACRN,EAAQO,OAAO6U,EAAIC,GACnBrV,EAAQQ,OAAO+S,EAAIE,GACnBzT,EAAQ8G,SACR9G,EAAQU,YAiBZ,QAASuW,IAAsBjX,EAAST,EAAS6V,EAAIC,EAAI9B,EAAIE,EAAI7X,EAAQ2b,GAErE,GAAIC,GAAa/V,GAAe,GAAT7F,GACnB6b,EAAa7b,EAAS4b,EACtB3U,EAAauS,IAAO7B,EACpBmE,EAAYnY,EAAQ0N,YAAc,CAEtCjN,GAAQiH,UAAYqQ,GAAYtX,EAAST,EAAS3D,EAAQ2b,GAE1DvX,EAAQM,YAEJuC,GACIwS,EAAK5B,IAAIgE,IAAe,GAE5BzX,EAAQO,OAAO6U,EAAKsC,EAAWrC,GAC/BrV,EAAQQ,OAAO4U,EAAKsC,EAAWrC,GAC/BrV,EAAQQ,OAAO4U,EAAKsC,EAAWrC,EAAKoC,GACpCzX,EAAQQ,OAAO4U,EAAI3B,GACnBzT,EAAQQ,OAAO4U,EAAKsC,EAAWrC,EAAKoC,GACpCzX,EAAQQ,OAAO4U,EAAKsC,EAAWrC,KAE3BD,EAAK7B,IAAIkE,IAAe,GAE5BzX,EAAQO,OAAO6U,EAAIC,EAAKqC,GACxB1X,EAAQQ,OAAO4U,EAAIC,EAAKqC,GACxB1X,EAAQQ,OAAO4U,EAAKqC,EAAYpC,EAAKqC,GACrC1X,EAAQQ,OAAO+S,EAAI8B,GACnBrV,EAAQQ,OAAO4U,EAAKqC,EAAYpC,EAAKqC,GACrC1X,EAAQQ,OAAO4U,EAAIC,EAAKqC,IAG5B1X,EAAQkH,OACRlH,EAAQU,YAgBZ,QAASiX,IAAmB3X,EAAST,EAAS7C,EAAOuD,EAAGC,EAAGC,EAAGC,GAI1D,GAAIwX,IAAYzW,WAAW5B,EAAQqG,gBAAkB,GAAKzF,EAAI,IAC1DkR,GAAM,IAAOjR,EAAIwX,GAAY,CAEjC5X,GAAQoQ,cAAcvN,YAAcnD,GAAS+E,aAAazE,EAAST,EAAS7C,EAAOuD,EAAIE,EAAI,EAAGD,EAAIE,EAAIwX,EAAWvG,EAAIlR,GAh8IzH,GAAI2U,IAAiB,WAAc,QAAS+C,GAActc,EAAKG,GAAK,GAAIoc,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKnV,EAAW,KAAM,IAAK,GAAiCoV,GAA7BC,EAAK5c,EAAI6c,OAAOC,cAAmBN,GAAMG,EAAKC,EAAGG,QAAQC,QAAoBT,EAAKrY,KAAKyY,EAAGxb,QAAYhB,GAAKoc,EAAKlc,SAAWF,GAA3Dqc,GAAK,IAAoE,MAAO5Y,GAAO6Y,GAAK,EAAMC,EAAK9Y,EAAO,QAAU,KAAW4Y,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUvc,EAAKG,GAAK,GAAIF,MAAMC,QAAQF,GAAQ,MAAOA,EAAY,IAAI6c,OAAOC,WAAY9b,QAAOhB,GAAQ,MAAOsc,GAActc,EAAKG,EAAa,MAAM,IAAIW,WAAU,4DAEllBmc,GAAO,QAASC,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASvc,UAAW,IAAIwc,GAAOvc,OAAOwc,yBAAyBL,EAAQC,EAAW,QAAa7V,KAATgW,EAAoB,CAAE,GAAIE,GAASzc,OAAO0c,eAAeP,EAAS,OAAe,QAAXM,MAAmB,GAAkCP,EAAIO,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKpc,KAAgB,IAAIwc,GAASJ,EAAKL,GAAK,QAAe3V,KAAXoW,EAA4C,MAAOA,GAAOld,KAAK4c,IAExdO,GAAO,QAASC,GAAIV,EAAQC,EAAUjc,EAAOkc,GAAY,GAAIE,GAAOvc,OAAOwc,yBAAyBL,EAAQC,EAAW,QAAa7V,KAATgW,EAAoB,CAAE,GAAIE,GAASzc,OAAO0c,eAAeP,EAAwB,QAAXM,GAAmBI,EAAIJ,EAAQL,EAAUjc,EAAOkc,OAAoB,IAAI,SAAWE,IAAQA,EAAKlc,SAAYkc,EAAKpc,MAAQA,MAAc,CAAE,GAAI2c,GAASP,EAAKM,QAAoBtW,KAAXuW,GAAwBA,EAAOrd,KAAK4c,EAAUlc,GAAY,MAAOA,IAEta4c,GAAe,WAAc,QAASC,GAAiBxV,EAAQyV,GAAS,IAAK,GAAI9d,GAAI,EAAGA,EAAI8d,EAAM5d,OAAQF,IAAK,CAAE,GAAI+d,GAAaD,EAAM9d,EAAI+d,GAAW9c,WAAa8c,EAAW9c,aAAc,EAAO8c,EAAW5c,cAAe,EAAU,SAAW4c,KAAYA,EAAW7c,UAAW,GAAML,OAAOmd,eAAe3V,EAAQ0V,EAAWE,IAAKF,IAAiB,MAAO,UAAUvc,EAAa0c,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBrc,EAAYZ,UAAWsd,GAAiBC,GAAaN,EAAiBrc,EAAa2c,GAAqB3c,KAc3hBX,QAAOud,QACRvd,OAAOmd,eAAend,OAAQ,UAC1BI,YAAY,EACZE,cAAc,EACdD,UAAU,EACVF,MAAO,SAAeqH,EAAQgW,GAG1B,OAAejX,KAAXiB,GAAmC,OAAXA,EACxB,KAAM,IAAI1H,WAAU,0CAMxB,KAHA,GAAI2N,GAAKzN,OAAOwH,GACZrI,EAAI,EAEDA,EAAIuD,UAAUrD,OAAQF,IAAK,CAC9B,GAAIse,GAAa/a,UAAUvD,EAE3B,QAAmBoH,KAAfkX,GAA2C,OAAfA,EAQhC,IAJA,GAAIC,GAAY1d,OAAO2d,KAAK3d,OAAOyd,IAC/BG,EAAY,EACZC,EAAMH,EAAUre,OAEbue,EAAYC,EAAKD,IAAa,CACjC,GAAIE,GAAUJ,EAAUE,GACpBrB,EAAOvc,OAAOwc,yBAAyBiB,EAAYK,OAE1CvX,KAATgW,GAAsBA,EAAKnc,aAC3BqN,EAAGqQ,GAAWL,EAAWK,KAKrC,MAAOrQ,MASdxO,MAAMc,UAAUyF,SACjBxF,OAAOmd,eAAele,MAAMc,UAAW,WACnCI,MAAO,SAAe4d,EAAeC,GACjC,GAAIC,EAEJ,IAAa,OAATxb,KACA,KAAM,IAAI3C,WAAU,gCAGxB,IAAIoe,GAAIle,OAAOyC,MACXob,EAAMK,EAAE7e,SAAW,CAEvB,IAAY,IAARwe,EACA,OAAQ,CAGZ,IAAIlZ,IAAKqZ,GAAa,CAMtB,IAJInZ,KAAKC,IAAIH,KAAOwZ,EAAAA,IAChBxZ,EAAI,GAGJA,GAAKkZ,EACL,OAAQ,CAKZ,KAFAI,EAAIpZ,KAAKsD,IAAIxD,GAAK,EAAIA,EAAIkZ,EAAMhZ,KAAKC,IAAIH,GAAI,GAEtCsZ,EAAIJ,GAAK,CACZ,GAAII,IAAKC,IAAKA,EAAED,KAAOF,EACnB,MAAOE,EAGXA,KAGJ,OAAQ,KASfhf,MAAMc,UAAU4K,MACjB3K,OAAOmd,eAAele,MAAMc,UAAW,QACnCI,MAAO,SAAeie,GAClB,GAAa,OAAT3b,KACA,KAAM,IAAI3C,WAAU,8BAWxB,KARA,GAAIoe,GAAIle,OAAOyC,MACXob,EAAMK,EAAE7e,SAAW,EACnBqC,EAAQgB,UAAU,GAClB2b,EAAgB3c,GAAS,EACzBuc,EAAII,EAAgB,EAAIxZ,KAAKsD,IAAI0V,EAAMQ,EAAe,GAAKxZ,KAAKoG,IAAIoT,EAAeR,GACnFhc,EAAMa,UAAU,GAChB4b,MAAsB/X,KAAR1E,EAAoBgc,EAAMhc,GAAO,EAC/C0c,EAAQD,EAAc,EAAIzZ,KAAKsD,IAAI0V,EAAMS,EAAa,GAAKzZ,KAAKoG,IAAIqT,EAAaT,GAC9EI,EAAIM,GACPL,EAAED,GAAKG,EACPH,GAGJ,OAAOC,MAQG,mBAAXpd,UACPA,OAA2B,mBAAXC,WAA8BA,OAmGlD,IAAIyd,IAAe,WAIf,QAASA,KACL/d,EAAgBgC,KAAM+b,GAEtB/b,KAAKgc,WAELhc,KAAKic,YAAcjc,KAAKkc,GACxBlc,KAAKmc,eAAiBnc,KAAKoc,IA2I/B,MAjIA9B,IAAayB,IACTpB,IAAK,OASLjd,MAAO,SAAc2e,GACjB,GAAIrc,KAAKgc,QAAQK,GAAQ,CAIrB,IAAK,GAHD3f,GAAI,EACJ8B,EAAIwB,KAAKgc,QAAQK,GAAOzf,OAEnB0f,EAAOrc,UAAUrD,OAAQ2f,EAAO/f,MAAM8f,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC5FD,EAAKC,EAAO,GAAKvc,UAAUuc,EAG/B,MAAO9f,EAAI8B,EAAG9B,IACVsD,KAAKgc,QAAQK,GAAO3f,IAAMsD,KAAKgc,QAAQK,GAAO3f,GAAGqD,MAAMC,KAAMuc,OAczE5B,IAAK,OACLjd,MAAO,SAAc2e,GACjB,IAAK,GAAII,GAAQxc,UAAUrD,OAAQ8f,EAAWlgB,MAAMigB,EAAQ,EAAIA,EAAQ,EAAI,GAAIE,EAAQ,EAAGA,EAAQF,EAAOE,IACtGD,EAASC,EAAQ,GAAK1c,UAAU0c,EAiBpC,KAdA,GAAIjgB,GAAI,EACJ8B,EAAIke,EAAS9f,OACbG,EAAOiD,KAYJtD,EAAI8B,EAAG9B,KAVF,WACR,GAAIkgB,GAAUF,EAAShgB,GACnBmgB,EAAU,QAASA,KACnB9f,EAAKqf,IAAIC,EAAOQ,GAChBD,EAAQ7c,MAAMhD,EAAMkD,WAGxByc,GAAShgB,GAAKmgB,IAOlB7c,MAAKkc,GAAGnc,MAAMC,MAAOqc,GAAOpW,OAAOyW,OAYvC/B,IAAK,KACLjd,MAAO,SAAY2e,GACVrc,KAAKgc,QAAQK,KACdrc,KAAKgc,QAAQK,MAMjB,KAHA,GAAI3f,GAAI,EACJ8B,EAAIyB,UAAUrD,QAAU,EAAI,EAAIqD,UAAUrD,OAAS,EAEhDF,EAAI8B,EAAG9B,IACVsD,KAAKgc,QAAQK,GAAO5b,KAAKR,UAAUrD,QAAUF,EAAI,MAAIoH,GAAY7D,UAAUvD,EAAI,OAYvFie,IAAK,MACLjd,MAAO,SAAa2e,GAChB,GAAKrc,KAAKgc,QAAQK,GAOlB,IAHA,GAAI3f,GAAI,EACJ8B,EAAIyB,UAAUrD,QAAU,EAAI,EAAIqD,UAAUrD,OAAS,EAEhDF,EAAI8B,EAAG9B,IAIV,IAHA,GAAIogB,GAAW7c,UAAUrD,QAAUF,EAAI,MAAIoH,GAAY7D,UAAUvD,EAAI,GACjEqgB,MAAQ,KAEHA,EAAQ/c,KAAKgc,QAAQK,GAAOtZ,QAAQ+Z,KACzC9c,KAAKgc,QAAQK,GAAOW,OAAOD,EAAO,MAY9CpC,IAAK,qBACLjd,MAAO,SAA4B2e,SACxBrc,MAAKgc,QAAQK,MAGxB1B,IAAK,YACLlB,IAAK,WACD,MAAOzZ,MAAKgc,YAIbD,KAwCPnc,GAAwBzB,EAAU,0BAA4B,SAAU8e,GACxE,MAAOC,YAAW,WACd,MAAOD,IAAS,GAAIE,OAAOC,YAC5B,IAAO,KAmCVC,IACAC,OAAQ,SAAgBC,GACpB,MAAOA,IAEXC,KAAM,SAAcD,GAChB,MAAOnb,MAAKqb,IAAIF,EAAG,IAEvBG,OAAQ,SAAgBH,GACpB,MAAO,GAAIF,GAAMG,KAAK,EAAID,IAE9BI,MAAO,SAAeJ,GAClB,MAAOnb,MAAKqb,IAAIF,EAAG,IAEvBK,QAAS,SAAiBL,GACtB,MAAO,GAAInb,KAAKqb,IAAI,EAAIF,EAAG,IAE/BM,MAAO,SAAeN,GAClB,MAAO,GAAInb,KAAKoB,IAAIpB,KAAK0b,KAAKP,KAElCQ,QAAS,SAAiBR,GACtB,MAAOnb,MAAKoB,IAAIpB,KAAK0b,KAAK,EAAIP,KAElCS,OAAQ,SAAgBT,GACpB,MAAO,GAAIF,GAAMY,SAAS,EAAIV,IAElCU,SAAU,SAAkBV,GAGxB,IAFA,GAAIW,GAAI,EACJC,EAAI,EACD,EAAGD,GAAKC,EAAGA,GAAK,EACnB,GAAIZ,IAAM,EAAI,EAAIW,GAAK,GACnB,OAAQ9b,KAAKqb,KAAK,GAAK,EAAIS,EAAI,GAAKX,GAAK,EAAG,GAAKnb,KAAKqb,IAAIU,EAAG,IAIzEC,QAAS,SAAiBb,GACtB,MAAO,GAAIF,GAAMgB,SAAS,EAAId,IAElCc,SAAU,SAAkBd,GAExB,MAAOnb,MAAKqb,IAAI,EAAG,IAAMF,EAAI,IAAMnb,KAAKqB,IAAI,GAAKrB,KAAKgB,GAD9C,IACuD,EAAIma,KAoFvEe,GAAY,WASZ,QAASA,KACL,GAAIpf,GAAOe,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,GAAmBA,UAAU,GAAK,SAC3Ed,EAAWc,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,GAAmBA,UAAU,GAAK,IAC/EjB,EAAOiB,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,GAAmBA,UAAU,GAAK,aAC3Eb,EAAMa,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,GAAmBA,UAAU,GAAK,YAoC9E,IAlCAjC,EAAgBgC,KAAMse,GAQtBte,KAAKb,SAAWA,EAUhBa,KAAKd,KAAOA,EAOZc,KAAKhB,KAAOA,EAOZgB,KAAKZ,IAAMA,EAEc,kBAAdY,MAAKhB,KACZ,KAAM,IAAI3B,WAAU,mCAAoC2B,EAG5D,IAAwB,kBAAbgB,MAAKZ,IACZ,KAAM,IAAI/B,WAAU,kCAAmC+B,GAiG/D,MAxDAkb,IAAagE,IACT3D,IAAK,UACLjd,MAAO,SAAiBsB,EAAMI,GAC1B,GAAImf,GAAQve,IAEZA,MAAKL,OAASK,KAAKwe,QAGnB,IAAIvf,GAAQZ,OAAOogB,aAAepgB,OAAOogB,YAAYC,IAAMrgB,OAAOogB,YAAYC,MAAQvgB,EAAU,uBAAyBgf,KAAKuB,KAE9H1f,GAAOA,GAAQgB,KAAKhB,KACpBI,EAAMA,GAAOY,KAAKZ,IAElBY,KAAKhB,KAAOA,EACZgB,KAAKZ,IAAMA,EAOXY,KAAKL,MAAQC,GAAsB,SAAUb,GACzC,MAAOD,GAAKC,EAAMC,EAAMC,EAAOoe,GAAMkB,EAAMrf,OAASqf,EAAMrf,KAAMqf,EAAMpf,SAAUC,EAAKmf,QAS7F5D,IAAK,SACLjd,MAAO,WACH,GAAIsC,KAAKL,MAAO,EACexB,EAAU,yBAErC,SAAUwgB,MAEW3e,KAAKL,OAC1BK,KAAKL,MAAQ,SASrBgb,IAAK,UACLjd,MAAO,WACHsC,KAAKwe,SACLxe,KAAKhB,KAAO,KACZgB,KAAKZ,IAAM,SAIZkf,IAWXA,IAAUjB,MAAQA,EA4DlB,IAAIuB,IAAc,WAQd,QAASA,GAAYre,EAASse,EAAS/L,GACnC9U,EAAgBgC,KAAM4e,GAQtB5e,KAAKO,QAAUA,EAOfP,KAAK6e,QAAUA,EAAQ7G,cAOvBhY,KAAK8S,KAAO8L,EAAYE,SAAShM,GAOjC9S,KAAK+e,KAAO1iB,EAAGyW,GAOf9S,KAAKgf,mBAAoB,EAQzBhf,KAAKif,eAAiB5gB,OAAO6gB,iBAGxB7gB,OAAO8gB,qBACRP,EAAYQ,SAASpf,KAAKqf,SAASC,KAAKtf,OAiRhD,MArQAsa,IAAasE,IACTjE,IAAK,cACLjd,MAAO,SAAqB6hB,GAExB,SAAUA,EAAKC,SAAWD,EAAKC,QAAQxH,gBAAkBhY,KAAK6e,SAAWU,EAAKE,aAAa,eAAiBzf,KAAK8S,SASrH6H,IAAK,WACLjd,MAAO,WAMH,IALA,GAAIgiB,GAAWC,SAASC,qBAAqB5f,KAAK6e,SAC9CniB,EAAI,EACJ8B,EAAIkhB,EAAS9iB,OAGVF,EAAI8B,EAAG9B,IACVsD,KAAK6f,QAAQH,EAAShjB,GAGtBsD,MAAKif,eAAiBjf,KAAKgf,oBAC3B,GAAIE,kBAAiBlf,KAAK8f,QAAQR,KAAKtf,OAAO8f,QAAQH,SAASI,MAC3DC,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,eAAe,EACfC,mBAAmB,EACnBC,uBAAuB,IAG3BrgB,KAAKgf,mBAAoB,MAWjCrE,IAAK,UACLjd,MAAO,SAAiB4iB,GAKpB,IAJA,GAAI5jB,GAAI,EACJ8B,EAAI8hB,EAAQ1jB,OAGTF,EAAI8B,EAAG9B,IAAK,CACf,GAAI6jB,GAASD,EAAQ5jB,EAErB,IAAoB,eAAhB6jB,EAAOzN,MAAkD,cAAzByN,EAAOC,eAAiCxgB,KAAKygB,YAAYF,EAAOxb,SAAWwb,EAAOG,WAAa1gB,KAAK8S,KAEhIoK,WAAWld,KAAK6f,QAAQP,KAAKtf,KAAMugB,EAAOxb,aACvC,IAAIwb,EAAOI,YAAcJ,EAAOI,WAAW/jB,OAIlD,IAHA,GAAIgkB,GAAK,EACLC,EAAKN,EAAOI,WAAW/jB,OAEpBgkB,EAAKC,EAAID,IACZ1D,WAAWld,KAAK6f,QAAQP,KAAKtf,KAAMugB,EAAOI,WAAWC,SAgBrEjG,IAAK,UASLjd,MAAO,SAAiB6hB,GACpB,GAAIuB,GAAS9gB,IAEb,KAAKA,KAAKygB,YAAYlB,GAAO,MAAO,KAEpC,IAAInhB,OAAO,GACPmC,EAAUwgB,KAAKC,MAAMD,KAAKE,UAAUjhB,KAAKO,UACzCtC,EAAW,IAEf,KAAKG,IAAQmC,GAET,GAAIA,EAAQ2gB,eAAe9iB,GAAO,CAC9B,GAAIoiB,GAAgB5B,EAAYuC,gBAAgB/iB,GAC5CgjB,EAAiBxC,EAAYoC,MAAMzB,EAAKE,aAAae,GAElC,QAAnBY,OAA8Ctd,KAAnBsd,IAC3B7gB,EAAQnC,GAAQgjB,GAS5B,MAJA7gB,GAAQ8gB,SAAW9B,EACnBthB,EAAW,GAAI+B,MAAK+e,KAAKxe,GACzBtC,EAASe,MAAQf,EAASe,OAErBgB,KAAKif,cAEVhhB,EAASqjB,SAAW,GAAIpC,kBAAiB,SAAUoB,GAC/CA,EAAQiB,QAAQ,SAAUhB,GACtB,GAAoB,eAAhBA,EAAOzN,KAAuB,CAC9B,GAAI0O,GAAOjB,EAAOC,cAAcxI,cAC5BlF,EAAOyM,EAAKE,aAAa+B,GAAMxJ,aAEnC,IAAa,cAATwJ,GAAwB1O,GAAQA,IAASgO,EAAOhO,KAChD7U,EAASqjB,SAASG,mBACXxjB,GAASqjB,SAChBrjB,EAASyjB,SAAWzjB,EAASyjB,cAC1B,IAA0B,UAAtBF,EAAK5iB,OAAO,EAAG,GAAgB,CACtC,GAAI+iB,GAAQH,EAAK5iB,OAAO,GAAG4D,MAAM,KAAK0D,IAAI,SAAU0b,EAAMllB,GACtD,MAAQA,GAAWklB,EAAKljB,OAAO,GAAGC,cAAgBijB,EAAKhjB,OAAO,GAAlDgjB,IACb5e,KAAK,IACJ6e,IAEJA,GAASF,GAAS/C,EAAYoC,MAAMzB,EAAKE,aAAac,EAAOC,gBAE/C,UAAVmB,EACA1jB,IAAaA,EAASP,MAAQmkB,EAASF,IAEvC1jB,EAAS6jB,QAAU7jB,EAAS6jB,OAAOD,SAQvD5jB,EAASqjB,SAASxB,QAAQP,GAAQW,YAAY,IAEvCjiB,GAjCwBA,OA6CnC0c,IAAK,QACLjd,MAAO,SAAeA,GAElB,GAAc,SAAVA,EAAkB,OAAO,CAC7B,IAAc,UAAVA,EAAmB,OAAO,CAG9B,IAAc,cAAVA,EAAJ,CAGA,GAAc,SAAVA,EAAkB,MAAO,KAQ7B,IAAI,qCAAqCqkB,KAAKrkB,GAC1C,MAAOA,GAAM8E,MAAM,IAIvB,KACI,MAAOue,MAAKC,MAAMtjB,GACpB,MAAOskB,IAGT,MAAOtkB,OAGXid,IAAK,WACLjd,MAAO,SAAkBukB,GAMrB,IALA,GAAI1lB,GAAM0lB,EAAUzf,MAAM,aACtB9F,EAAI,EACJ8B,EAAIjC,EAAIK,OACRslB,EAAM3lB,EAAI,GAAGyb,cAEVtb,EAAI8B,EAAG9B,IACVwlB,GAAO,IAAM3lB,EAAIG,GAAGsb,aAGxB,OAAOkK,MAYXvH,IAAK,cACLjd,MAAO,SAAqBykB,GAQxB,IAPA,GAAI1jB,KAAcwB,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,KAAmBA,UAAU,GAE7E1D,EAAM4lB,EAAO3f,MAAM,KACnB9F,EAAI,EACJ8B,EAAIjC,EAAIK,OACRslB,EAAM,GAEHxlB,EAAI8B,EAAG9B,IAINwlB,GAHExlB,GAAK+B,EAGAlC,EAAIG,GAAG,GAAGiC,cAAgBpC,EAAIG,GAAGkC,OAAO,GAAGoZ,cAF3Czb,EAAIG,GAAGsb,aAMtB,OAAOkK,MAYXvH,IAAK,kBACLjd,MAAO,SAAyBwkB,GAC5B,MAAO,QAAUtD,EAAYE,SAASoD,MAW1CvH,IAAK,WACLjd,MAAO,SAAkBkf,GACrB,GAAI,oBAAoBmF,MAAM1jB,OAAOshB,cAAgByC,WAAa,IAAK,MAAOxF,IAE1Eve,QAAOgkB,iBAAkBhkB,OAAOgkB,iBAAiB,mBAAoBzF,GAAS,GAAgBve,OAAOikB,aAAajkB,OAAOikB,YAAY,SAAU1F,OAIpJgC,KAuCP5V,GAAc,WAQd,QAASA,GAAYuZ,EAAQ7b,EAAO8b,GAChCxkB,EAAgBgC,KAAMgJ,GAEtBA,EAAYyZ,WAAWhiB,KAAKT,MAO5BA,KAAK0G,MAAQA,GAAS,EAOtB1G,KAAKwiB,OAASA,GAAU,EAOxBxiB,KAAK6e,QAAU0D,EAEfviB,KAAK0iB,OA8LT,MAtLApI,IAAatR,IACT2R,IAAK,OACLjd,MAAO,WACH,GAAIuL,GAAaD,EAAYC,UAE7BjJ,MAAK6e,QAAQnY,MAAQ1G,KAAK0G,MAAQuC,EAClCjJ,KAAK6e,QAAQ2D,OAASxiB,KAAKwiB,OAASvZ,EAEpCjJ,KAAK6e,QAAQ8D,MAAMjc,MAAQ1G,KAAK0G,MAAQ,KACxC1G,KAAK6e,QAAQ8D,MAAMH,OAASxiB,KAAKwiB,OAAS,KAO1CxiB,KAAK4iB,aAAe5iB,KAAK6e,QAAQgE,WAAU,GAQ3C7iB,KAAKgB,QAAUhB,KAAK6e,QAAQiE,WAAW,MAOvC9iB,KAAK+iB,aAAe/iB,KAAK4iB,aAAaE,WAAW,MAOjD9iB,KAAKgjB,UAAYhjB,KAAK6e,QAAQnY,MAO9B1G,KAAKijB,WAAajjB,KAAK6e,QAAQ2D,OAO/BxiB,KAAKkjB,MAAQljB,KAAKgjB,UAAY,EAO9BhjB,KAAKmjB,MAAQnjB,KAAKijB,WAAa,EAO/BjjB,KAAKojB,QAAUpjB,KAAKkjB,MAAQljB,KAAKmjB,MAAQnjB,KAAKkjB,MAAQljB,KAAKmjB,MAE3DnjB,KAAK4iB,aAAaS,aAAc,EAEhCrjB,KAAK+iB,aAAaO,UAAUtjB,KAAKkjB,MAAOljB,KAAKmjB,OAC7CnjB,KAAK+iB,aAAa3e,OAElBpE,KAAKgB,QAAQsiB,UAAUtjB,KAAKkjB,MAAOljB,KAAKmjB,OACxCnjB,KAAKgB,QAAQoD,OAEbpE,KAAKgB,QAAQ0E,IAAM1F,KAAK+iB,aAAard,IAAM1F,KAAKojB,QAChDpjB,KAAKgB,QAAQkI,UAAYlJ,KAAK+iB,aAAa7Z,UAAY,QAQ3DyR,IAAK,UACLjd,MAAO,WACH,GAAIqf,GAAQ/T,EAAYyZ,WAAW1f,QAAQ/C,OAGtC+c,GACD/T,EAAYyZ,WAAWzF,OAAOD,EAAO,GAGzC/c,KAAKgB,QAAQuiB,WAAWvjB,KAAKkjB,OAAQljB,KAAKmjB,MAAOnjB,KAAKgjB,UAAWhjB,KAAKijB,YAGtEjjB,KAAKgB,QAAQ0E,IAAM,WACZ1F,MAAKgB,QAAQ0E,IAEpB1F,KAAKgB,QAAQkI,UAAY,WAClBlJ,MAAKgB,QAAQkI,UAEpBlJ,KAAKgB,QAAU,KACfhB,KAAK+iB,aAAe,KACpB/iB,KAAK4iB,aAAe,KACpB5iB,KAAK6e,QAAU,KAOf7e,KAAKwjB,SAAW,QAQpB7I,IAAK,SACLjd,MAAO,WACH,GAAI+lB,GAAQza,EAAYC,UAOxB,OALc,KAAVwa,IACAzjB,KAAK+iB,aAAaU,MAAMA,EAAOA,GAC/BzjB,KAAK+iB,aAAa3e,QAGfpE,QAQX2a,IAAK,SACLjd,MAAO,WAUH,MATAsC,MAAK0iB,OAOL1iB,KAAKwjB,UAAYxjB,KAAKwjB,WAEfxjB,UAUX2a,IAAK,SAMLjd,MAAO,WAIH,IAHA,GAAIhB,GAAI,EACJ8B,EAAIwK,EAAYyZ,WAAW7lB,OAExBF,EAAI8B,EAAG9B,IACVsM,EAAYyZ,WAAW/lB,GAAGgnB,YAIlC/I,IAAK,aACLlB,IAAK,WAGD,MAAOpb,QAAOslB,kBAAoB,MAInC3a,IAGXA,IAAYyZ,cAIRpkB,OAAOulB,YAEPvlB,OAAOulB,WAAW,sCAAsC3H,YAAYjT,GAAY0a,OA+CpF,IAAIG,KAEAxC,SAAU,KACV3a,MAAO,EACP8b,OAAQ,EACR5hB,SAAU,EACVC,SAAU,IACVnD,MAAO,EACP6P,OAAO,EACP7B,YAAY,EACZlL,YAAa,EAAG,GAAI,GAAI,GAAI,GAAI,KAChC8K,WAAY,GACZe,aAAa,EACbyD,eAAe,EACfgU,eAAe,EACf1W,OAAO,EACP2W,SAAS,EACT7W,cAAe,EAEf8W,UAAW,KAGXhiB,SAAU,EACVF,SAAU,EACVgB,cAAe,EACfD,cAAe,EAGfohB,WAAW,EACXC,kBAAmB,IACnBC,cAAe,QAGf/Z,WAAY,OACZD,cAAe,GACfgC,gBAAiB,OACjBX,gBAAiB;uBACjBC,iBAAkB,GAClB4B,WAAY,OACZG,WAAY,OACZd,aAAc,OACd0B,YAAa,sBACbC,eAAgB,uBAChBlG,eAAgB,OAChB3C,qBAAsB,kBACtBhB,kBAAmB,kBACnBqF,iBAAkB,OAClBC,oBAAqB,OACrBC,kBAAmB,OACnBC,qBAAsB,UACtBC,iBAAkB,UAClBC,oBAAqB,OACrBtC,kBAAmB,OACnBC,qBAAsB,OACtBG,wBAAyB,UACzBD,oBAAqB,gBACrBwG,oBAAqB,sBACrB1J,sBAAuB,yBACvBwK,eAAgB,OAChBC,SAAU,OACVK,iBAAkB,OAClBF,eAAgB,OAEhB2U,YAAa,QACbC,UAAW,QACXC,UAAW,QACXC,UAAW,QAEXzX,gBAAiB,GACjBwK,cAAe,GACfG,cAAe,GACf7Q,cAAe,GAEf4d,iBAAkB,SAClBC,eAAgB,SAChBC,eAAgB,SAChBC,eAAgB,SAEhBC,kBAAmB,SACnBC,gBAAiB,SACjBC,gBAAiB,SACjBC,gBAAiB,SAGjBrX,QAAQ,EACRhJ,cAAc,EACd4J,WAAY,QACZP,YAAa,EACbF,UAAW,GACXI,YAAa,EAGb9E,iBAAkB,EAClBC,kBAAmB,EACnBC,iBAAkB,EAClBhF,kBAAmB,EAGnBsB,UAAU,EACVmB,eAAgB,EAChBO,cAAe,EACfjB,UAAW,GACXb,iBAAiB,EACjB4B,qBAAsB,IAGtBsD,aAAe5N,KAAM,GAAImO,GAAI,GAAIC,MAAO,SAAYpO,KAAM,GAAImO,GAAI,GAAIC,MAAO,SAAYpO,KAAM,GAAImO,GAAI,IAAKC,MAAO,SACnHV,gBAAiB,GAGjBwB,SAAU,GACVC,eAAgB,EAChB0D,aAAa,EACbH,UAAW,EAwCfzP,GAAWxC,UAAYC,OAAOC,OAAOhB,MAAMc,WAC3CwC,EAAWxC,UAAUG,YAAcqC,EAQnCA,EAAWxC,UAAUmc,IAAM,SAAUkF,GACjC,GAAkB,gBAAPA,GAIP,IAHA,GAAIjiB,GAAI,EACJ8B,EAAIwB,KAAKpD,OAENF,EAAI8B,EAAG9B,IAAK,CACf,GAAI6lB,GAASviB,KAAKtD,GAAG6D,QAAQ8gB,SAAS7B,QAAUxf,KAAKtD,GAAG6D,QAAQ8gB,SAEhE1B,SAASqF,eAAehlB,KAAKtD,GAAG6D,QAAQ8gB,UAAY,GAEpD,IAAIkB,EAAO9C,aAAa,QAAUd,EAC9B,MAAO3e,MAAKtD,OAGjB,IAAkB,gBAAPiiB,GACd,MAAO3e,MAAK2e,EAGhB,OAAO,MA2BX,IAAIsG,IAAU,QAEVxiB,GAAQL,KAAKK,MACbJ,GAAMD,KAAKC,IAEX6iB,GAAS,GAAIplB,EAEjBolB,IAAOD,QAAUA,EA6BjB,IAAItZ,IAAY,SAAUwZ,GAoDtB,QAASxZ,GAAUpL,GACfvC,EAAgBgC,KAAM2L,EAEtB,IAAIyZ,GAAStoB,EAA2BkD,MAAO2L,EAAU5N,WAAaR,OAAO0c,eAAetO,IAAY3O,KAAKgD,OAEzGqlB,EAAYD,EAAO3nB,YAAY6nB,IAEnC,IAAkB,cAAdD,EACA,KAAM,IAAIhoB,WAAU,yCA6CxB,IA1CA6nB,GAAOzkB,KAAK2kB,GAER7kB,EAAQyjB,WACRzmB,OAAO2d,KAAK3a,EAAQyjB,WAAWzC,QAAQ,SAAUlF,IAC9B9b,EAAQyjB,UAAU3H,YAAkB7f,OAAQ+D,EAAQyjB,UAAU3H,IAAU9b,EAAQyjB,UAAU3H,KAEhGkF,QAAQ,SAAU3E,GACvBwI,EAAOlJ,GAAGG,EAAOO,OAW7BwI,EAAOH,QAAUA,GAOjBG,EAAOtS,KAAOzW,EAAGgpB,IAAc1Z,EAO/ByZ,EAAO/B,aAAc,EAErB9iB,EAAQK,SAAWuB,WAAW5B,EAAQK,UACtCL,EAAQM,SAAWsB,WAAW5B,EAAQM,UACtCN,EAAQ7C,MAAQyE,WAAW5B,EAAQ7C,QAAU,EAExC6C,EAAQwjB,UACTxjB,EAAQ8I,iBAAmB9I,EAAQ6I,kBAAoB7I,EAAQ4I,iBAAmB,IAGjF5I,EAAQ8gB,SACT,KAAMhkB,WAAU,mEAGpB,IAAIklB,GAAShiB,EAAQ8gB,SAAS7B,QAAUjf,EAAQ8gB,SAEhD1B,SAASqF,eAAezkB,EAAQ8gB,SAEhC,MAAMkB,YAAkBgD,oBACpB,KAAMloB,WAAU,yCAiCpB,OA9BAkD,GAAQmG,MAAQvE,WAAW5B,EAAQmG,QAAU,EAC7CnG,EAAQiiB,OAASrgB,WAAW5B,EAAQiiB,SAAW,EAE1CjiB,EAAQmG,OAAUnG,EAAQiiB,SACtBjiB,EAAQmG,QAAOnG,EAAQmG,MAAQ6b,EAAOiD,WAAajD,EAAOiD,WAAWC,YAAclD,EAAOkD,aAC1FllB,EAAQiiB,SAAQjiB,EAAQiiB,OAASD,EAAOiD,WAAajD,EAAOiD,WAAWE,aAAenD,EAAOmD,eAQtGN,EAAO7kB,QAAUA,MAEb6kB,EAAO7kB,QAAQujB,gBACfsB,EAAOzJ,OAASyJ,EAAO7kB,QAAQ7C,MAC/B0nB,EAAO7kB,QAAQ7C,MAAQ0nB,EAAO7kB,QAAQK,UAM1CwkB,EAAO7C,OAAS,GAAIvZ,IAAYuZ,EAAQhiB,EAAQmG,MAAOnG,EAAQiiB,QAC/D4C,EAAO7C,OAAOiB,SAAW4B,EAAOpmB,KAAKsgB,KAAK8F,GAK1CA,EAAOnB,UAAY,GAAI3F,IAAU/d,EAAQ4jB,cAAe5jB,EAAQ2jB,mBACzDkB,EAqQX,MAvZAloB,GAAUyO,EAAWwZ,GA8JrB7K,GAAa3O,IACTgP,IAAK,SASLjd,MAAO,SAAgB6C,GAWnB,MAVAhD,QAAOud,OAAO9a,KAAKO,QAASP,KAAK8S,KAAK6S,UAAUplB,QAEhDP,KAAKuiB,OAAO7b,MAAQ1G,KAAKO,QAAQmG,MACjC1G,KAAKuiB,OAAOC,OAASxiB,KAAKO,QAAQiiB,OAElCxiB,KAAKikB,UAAU/kB,KAAOc,KAAKO,QAAQ4jB,cACnCnkB,KAAKikB,UAAU9kB,SAAWa,KAAKO,QAAQ2jB,kBAEvClkB,KAAKuiB,OAAOmB,SAEL1jB,QAQX2a,IAAK,UACLjd,MAAO,WACH,GAAIqf,GAAQmI,GAAOniB,QAAQ/C,OAGtB+c,GAEDmI,GAAOlI,OAAOD,EAAO,GAGzB/c,KAAKuiB,OAAOb,UACZ1hB,KAAKuiB,OAAS,KAEdviB,KAAKikB,UAAUvC,UACf1hB,KAAKikB,UAAY,KAEjBjkB,KAAK4lB,KAAK,cAUdjL,IAAK,OASLjd,MAAO,WASH,MARIsC,MAAKO,QAAQujB,gBAAkB9jB,KAAKqjB,cACpCrjB,KAAKtC,MAAQsC,KAAK2b,OAClB3b,KAAKqjB,aAAc,EACnBrjB,KAAK4lB,KAAK,SAGd5lB,KAAK4lB,KAAK,UAEH5lB,QAWX2a,IAAK,QACLP,IAAK,SAAa1c,GACd,GAAImoB,GAAS7lB,IAEbtC,GAAQiO,EAAUma,YAAYpoB,EAAOsC,KAAKO,QAAQK,SAElD,IAAImlB,GAAY/lB,KAAKO,QAAQ7C,KAE7B,IAAIA,IAAUqoB,EAId,GAAI/lB,KAAKO,QAAQ0jB,UAAW,CACxB,GAAIjkB,KAAKikB,UAAUtkB,QAIfK,KAAKO,QAAQ7C,MAAQsC,KAAK2b,OAGtB3b,KAAK2b,SAAWje,GAGhB,MAFAsC,MAAKikB,UAAUzF,oBACRxe,MAAK2b,WASA7X,KAAhB9D,KAAK2b,SACL3b,KAAK2b,OAASje,GAGlBsC,KAAK4lB,KAAK,kBAEV5lB,KAAKikB,UAAU+B,QAAQ,SAAUzmB,GAC7B,GAAI0mB,GAAWF,GAAaroB,EAAQqoB,GAAaxmB,CAEjDsmB,GAAOtlB,QAAQuP,eAAiB+V,EAAOD,KAAK,QAASK,EAAUJ,EAAOnoB,OAEtEmoB,EAAOtlB,QAAQ7C,MAAQuoB,EAEvBJ,EAAO7mB,OAEP6mB,EAAOD,KAAK,UAAWrmB,EAASsmB,EAAOtlB,QAAQ7C,QAChD,eACuBoG,KAAlB+hB,EAAOlK,SACPkK,EAAOD,KAAK,QAASC,EAAOlK,OAAQkK,EAAOnoB,OAC3CmoB,EAAOtlB,QAAQ7C,MAAQmoB,EAAOlK,aACvBkK,GAAOlK,QAGlBkK,EAAO7mB,OACP6mB,EAAOD,KAAK,sBAGhB5lB,MAAK4lB,KAAK,QAASloB,EAAOsC,KAAKtC,OAC/BsC,KAAKO,QAAQ7C,MAAQA,EACrBsC,KAAKhB,QAUbya,IAAK,WACD,WAA8B,KAAhBzZ,KAAK2b,OAAyB3b,KAAKO,QAAQ7C,MAAQsC,KAAK2b,YAY1EhB,IAAK,YACLjd,MAAO,SAAmB6C,GACtB,MAAOA,MAGXoa,IAAK,aACLjd,MAAO,SAAoBoV,EAAMvS,GAC7B,MAAO,IAAIqe,IAAYre,EAAS,SAAUuS,MAW9C6H,IAAK,cACLjd,MAAO,SAAqBmhB,GACxB,GAAI/L,GAAO8L,GAAYsH,YAAYrH,EAAQY,aAAa,cACpDS,EAAarB,EAAQqB,WACrBxjB,EAAI,EACJ8B,EAAI0hB,EAAWtjB,OACf2D,IAEJ,IAAKuS,EAAL,CAQA,IAJK,SAASiP,KAAKjP,KACfA,GAAQ,SAGLpW,EAAI8B,EAAG9B,IACV6D,EAAQqe,GAAYsH,YAAYhG,EAAWxjB,GAAG4oB,KAAKriB,QAAQ,SAAU,KAAK,IAAU2b,GAAYoC,MAAMd,EAAWxjB,GAAGgB,MAGxH,IAAIkhB,IAAYre,EAASse,EAAQW,QAAS1M,GAAM+M,QAAQhB,OAY5DlE,IAAK,cACLjd,MAAO,SAAqBA,GACxB,GAAI8K,GAAMvI,UAAUrD,OAAS,OAAsBkH,KAAjB7D,UAAU,GAAmBA,UAAU,GAAK,CAQ9E,OANAvC,GAAQyE,WAAWzE,IAEfgC,MAAMhC,IAAW+B,SAAS/B,KAC1BA,EAAQyE,WAAWqG,IAAQ,GAGxB9K,KAWXid,IAAK,MACLjd,MAAO,SAAawE,EAAGikB,GACnB,OAAQjkB,EAAIikB,EAAIA,GAAKA,KAGzBxL,IAAK,UACLlB,IAAK,WACD,MAAOwL,QAIRtZ,GACToQ,QASgB,KAAP1f,IACPA,EAAc,UAAIsP,GAClBtP,EAAW,QAAKgC,OAAOshB,cAAwB,OAAIuF,GAwavD,IAAIxkB,KACAK,UAAWA,EACXY,SAAUA,EACVhB,sBAAuBA,EACvBuC,QAASA,EACTG,YAAaA,EACbK,eAAgBA,EAChBe,iBAAkBA,EAClBgB,aAAcA,EACdvF,YAAaA,EACbI,aAAcA,EACd4D,WAAYA,EACZY,KAAMA,EACNyD,gBAAiBA,GA6BjBnF,GAAKhB,KAAKgB,GACV0H,GAAM1H,GAAK,EAcXgjB,GAA4B7oB,OAAOud,UAAW+I,IAE9ClZ,WAAY,IACZI,WAAY,GAGZ0D,uBAAwB,UACxBC,0BAA2B,OAC3BE,uBAAwB,UACxBC,0BAA2B,UAG3BlB,iBAAkB,GAClBgB,mBAAmB,EACnBH,mBAAmB,EACnBT,YAAa,GAGbtB,gBAAiB,SACjB4Z,YAAY,EAEZta,SAAU,IAykBVua,GAAc,SAAUC,GAmExB,QAASD,GAAY/lB,GAIjB,MAHAvC,GAAgBgC,KAAMsmB,GAEtB/lB,EAAUhD,OAAOud,UAAWsL,GAA2B7lB,OAChDzD,EAA2BkD,MAAOsmB,EAAYvoB,WAAaR,OAAO0c,eAAeqM,IAActpB,KAAKgD,KAAMsmB,EAAYX,UAAUplB,KAyL3I,MA/PArD,GAAUopB,EAAaC,GAkFvBjM,GAAagM,IACT3L,IAAK,OAQLjd,MAAO,WACH,IACI,GAAI6kB,GAASviB,KAAKuiB,OACdiE,IAASjE,EAAOW,OAAQX,EAAOY,MAAOZ,EAAOS,UAAWT,EAAOU,YAC/DhiB,EAAIulB,EAAK,GACTtlB,EAAIslB,EAAK,GACTrlB,EAAIqlB,EAAK,GACTplB,EAAIolB,EAAK,GAETjmB,EAAUP,KAAKO,OAEnB,IAAgC,WAA5BA,EAAQkM,gBAA8B,CACtC,IAAK8V,EAAOK,aAAaS,YAAa,CAClC,GAAIriB,GAAUuhB,EAAOQ,YAGrB/hB,GAAQuiB,UAAUtiB,EAAGC,EAAGC,EAAGC,GAC3BJ,EAAQoD,OAERpE,KAAK4lB,KAAK,eACVtc,EAAgBtI,EAAST,GACzBP,KAAK4lB,KAAK,oBACVvb,EAAqBrJ,EAAST,GAC9BP,KAAK4lB,KAAK,oBACV1a,EAAqBlK,EAAST,GAC9BP,KAAK4lB,KAAK,oBACV3Z,EAAqBjL,EAAST,GAC9BP,KAAK4lB,KAAK,iBACVtZ,EAAkBtL,EAAST,GAC3BP,KAAK4lB,KAAK,eACVzY,EAAgBnM,EAAST,GACzBP,KAAK4lB,KAAK,eACVtY,EAAgBtM,EAAST,GAEzBgiB,EAAOK,aAAaS,aAAc,EAGtCrjB,KAAKuiB,OAAOkE,SAGZlE,EAAOvhB,QAAQuiB,UAAUtiB,EAAGC,EAAGC,EAAGC,GAClCmhB,EAAOvhB,QAAQoD,OAEfme,EAAOvhB,QAAQ0lB,UAAUnE,EAAOK,aAAc3hB,EAAGC,EAAGC,EAAGC,GACvDmhB,EAAOvhB,QAAQoD,OAEfpE,KAAK4lB,KAAK,qBACV7W,EAAsBwT,EAAOvhB,QAAST,GACtCP,KAAK4lB,KAAK,kBACV9W,EAAmByT,EAAOvhB,QAAST,EAASqP,EAAa5P,OACzDA,KAAK4lB,KAAK,gBACVnY,EAAiB8U,EAAOvhB,QAAST,OAC9B,CACH,GAAIoM,IAAmBjM,GAASwC,SAAS3C,EAAQ7C,MAAQ6C,EAAQK,WAAaL,EAAQM,SAAWN,EAAQK,UAAYL,EAAQoK,WA2B7H,IAxBA4X,EAAOvhB,QAAQuiB,UAAUtiB,EAAGC,EAAGC,EAAGC,GAClCmhB,EAAOvhB,QAAQoD,OAEfpE,KAAK4lB,KAAK,eACVtc,EAAgBiZ,EAAOvhB,QAAST,GAEhCgiB,EAAOvhB,QAAQ6J,OAAO8B,GAGtB3M,KAAK4lB,KAAK,oBACVvb,EAAqBkY,EAAOvhB,QAAST,GACrCP,KAAK4lB,KAAK,oBACV1a,EAAqBqX,EAAOvhB,QAAST,GACrCP,KAAK4lB,KAAK,oBACV3Z,EAAqBsW,EAAOvhB,QAAST,GACrCP,KAAK4lB,KAAK,iBACVtZ,EAAkBiW,EAAOvhB,QAAST,GAClCP,KAAK4lB,KAAK,qBACV7W,EAAsBwT,EAAOvhB,QAAST,GAGtCgiB,EAAOvhB,QAAQ6J,QAAQ8B,GACvB4V,EAAOvhB,QAAQoD,QAEVme,EAAOK,aAAaS,YAAa,CAClC,GAAIsD,GAAWpE,EAAOQ,YAGtB4D,GAASpD,UAAUtiB,EAAGC,EAAGC,EAAGC,GAC5BulB,EAASviB,OAETpE,KAAK4lB,KAAK,eACVzY,EAAgBwZ,EAAUpmB,GAC1BP,KAAK4lB,KAAK,eACVtY,EAAgBqZ,EAAUpmB,GAC1BP,KAAK4lB,KAAK,gBACVnY,EAAiBkZ,EAAUpmB,GAE3BgiB,EAAOK,aAAaS,aAAc,EAGtCd,EAAOvhB,QAAQ0lB,UAAUnE,EAAOK,aAAc3hB,EAAGC,EAAGC,EAAGC,GAI3DpB,KAAK4lB,KAAK,kBACV9W,EAAmByT,EAAOvhB,QAAST,EAASqP,EAAa5P,OAEzDwZ,GAAK8M,EAAYhpB,UAAUS,WAAaR,OAAO0c,eAAeqM,EAAYhpB,WAAY,OAAQ0C,MAAMhD,KAAKgD,MAC3G,MAAOG,GACLO,GAASR,YAAYC,GAGzB,MAAOH,SAGX2a,IAAK,QAQLP,IAAK,SAAa1c,GACdA,EAAQiO,GAAUma,YAAYpoB,EAAOsC,KAAKO,QAAQK,UAE9CZ,KAAKO,QAAQ0jB,WAAyC,MAA5BjkB,KAAKO,QAAQoK,YAAsB3K,KAAKO,QAAQ8lB,aAC1ErmB,KAAK2b,OAASje,EACdA,EAAQsC,KAAKO,QAAQ7C,QAAUA,EAAQsC,KAAKO,QAAQ7C,OAAS,IAAM,KAAO,IAAM,KAGpFyc,GAAKmM,EAAYhpB,UAAUS,WAAaR,OAAO0c,eAAeqM,EAAYhpB,WAAY,QAASI,EAAOsC,OAS1GyZ,IAAK,WACD,MAAOD,IAAK8M,EAAYhpB,UAAUS,WAAaR,OAAO0c,eAAeqM,EAAYhpB,WAAY,QAAS0C,WAG1G2a,IAAK,YACLjd,MAAO,SAAmB6C,GAkBtB,MAjBIA,GAAQwL,SAAW,KAAIxL,EAAQwL,SAAW,IAG1CrM,MAAMa,EAAQwK,cAAaxK,EAAQwK,WAAa,IAEhDrL,MAAMa,EAAQoK,cAAapK,EAAQoK,WAAa,KAGhDpK,EAAQoK,WAAa,MAAKpK,EAAQoK,WAAa,KAE/CpK,EAAQoK,WAAa,IAAGpK,EAAQoK,WAAa,GAG7CpK,EAAQwK,WAAa,IAAGxK,EAAQwK,WAAa,GAE7CxK,EAAQwK,WAAa,MAAKxK,EAAQwK,WAAa,KAE5CxK,MAIR+lB,GACT3a,QASgB,KAAPtP,IACPA,EAAgB,YAAIiqB,IAGxB3a,GAAUib,WAAW,cAAeR,GAqCpC,IAAIS,IAA4BtpB,OAAOud,UAAW+I,IAE9CzT,aAAc,EAKdwB,eAAgB,GAChB+B,YAAa,GACbC,oBAAqB,GAErB3F,YAAa,EAEbnN,SAAU,OACVkT,WAAY,OAEZC,WAAY,OAEZ7B,WAAY,GACZsE,gBAAiB,EACjB9D,aAAc,EACdf,UAAW,GACXyF,cAAe,GAEf/M,gBAAiB,KAm/BjBuc,GAAc,SAAUC,GAyExB,QAASD,GAAYvmB,GAIjB,MAHAvC,GAAgBgC,KAAM8mB,GAEtBvmB,EAAUhD,OAAOud,UAAW+L,GAA2BtmB,OAChDzD,EAA2BkD,MAAO8mB,EAAY/oB,WAAaR,OAAO0c,eAAe6M,IAAc9pB,KAAKgD,KAAM8mB,EAAYnB,UAAUplB,KAiH3I,MA7LArD,GAAU4pB,EAAaC,GAwFvBzM,GAAawM,IACTnM,IAAK,OASLjd,MAAO,WACH,IACI,GAAI6kB,GAASviB,KAAKuiB,OACdyE,IAAUzE,EAAOW,OAAQX,EAAOY,MAAOZ,EAAOS,UAAWT,EAAOU,YAChEhiB,EAAI+lB,EAAM,GACV9lB,EAAI8lB,EAAM,GACV7lB,EAAI6lB,EAAM,GACV5lB,EAAI4lB,EAAM,GAEVzmB,EAAUP,KAAKO,OAEnB,KAAKgiB,EAAOK,aAAaS,YAAa,CAClC,GAAIriB,GAAUuhB,EAAOQ,YAGrB/hB,GAAQuiB,UAAUtiB,EAAGC,EAAGC,EAAGC,GAC3BJ,EAAQoD,OAERpE,KAAK4lB,KAAK,eACV5lB,KAAKinB,QAAU9W,EAAgBnP,EAAST,EAASU,EAAGC,EAAGC,EAAGC,GAE1DpB,KAAK4lB,KAAK,aACV/R,EAAc9T,UAAM+D,IAAY9C,EAAST,GAAS0F,OAAO3J,EAAmB0D,KAAKinB,WAEjF1E,EAAOvhB,QAAQoQ,cAAgBpQ,EAAQoQ,cAEvCpR,KAAK4lB,KAAK,oBACVzR,EAAwBnT,EAAST,GACjCP,KAAK4lB,KAAK,oBACVrP,EAAqBvV,EAAST,GAC9BP,KAAK4lB,KAAK,oBACVjQ,EAAqB3U,EAAST,GAC9BP,KAAK4lB,KAAK,iBACVjP,EAA4B3V,EAAST,GACrCP,KAAK4lB,KAAK,eACVxO,GAAgBpW,EAAST,GACzBP,KAAK4lB,KAAK,eACVrO,GAAgBvW,EAAST,GAEzBgiB,EAAOK,aAAaS,aAAc,EAGtCrjB,KAAKuiB,OAAOkE,SAGZlE,EAAOvhB,QAAQuiB,UAAUtiB,EAAGC,EAAGC,EAAGC,GAClCmhB,EAAOvhB,QAAQoD,OAEfme,EAAOvhB,QAAQ0lB,UAAUnE,EAAOK,aAAc3hB,EAAGC,EAAGC,EAAGC,GACvDmhB,EAAOvhB,QAAQoD,OAEfpE,KAAK4lB,KAAK,qBACV1R,EAAsBnU,UAAM+D,IAAYye,EAAOvhB,QAAST,GAAS0F,OAAO3J,EAAmB0D,KAAKinB,WAChGjnB,KAAK4lB,KAAK,gBACVlO,GAAoB6K,EAAOvhB,QAAST,GACpCP,KAAK4lB,KAAK,kBACVjN,GAAmB5Y,UAAM+D,IAAYye,EAAOvhB,QAAST,EAASA,EAAQuP,cAAgB9P,KAAKO,QAAQ7C,MAAQsC,KAAKtC,OAAOuI,OAAO3J,EAAmB0D,KAAKinB,WAEtJzN,GAAKsN,EAAYxpB,UAAUS,WAAaR,OAAO0c,eAAe6M,EAAYxpB,WAAY,OAAQ0C,MAAMhD,KAAKgD,MAC3G,MAAOG,GACLO,GAASR,YAAYC,GAGzB,MAAOH,WAGX2a,IAAK,YACLjd,MAAO,SAAmB6C,GAoBtB,MAlBIA,GAAQyL,gBAAkBzL,EAAQwL,WAElCxL,EAAQyL,eAAiBvJ,GAAMlC,EAAQwL,SAAW,IAItDxL,EAAQ2R,QAAU4B,EAAY,QAASvT,GAEvCA,EAAQ4R,SAAW2B,EAAY,OAAQvT,GAEnCA,EAAQ7C,MAAQ6C,EAAQM,WACxBN,EAAQ7C,MAAQ6C,EAAQM,UAGxBN,EAAQ7C,MAAQ6C,EAAQK,WACxBL,EAAQ7C,MAAQ6C,EAAQK,UAGrB+K,GAAUga,UAAUplB,OAI5BumB,GACTnb,QASgB,KAAPtP,IACPA,EAAgB,YAAIyqB,IAGxBnb,GAAUib,WAAW,cAAeC,IAA8C,mBAAXK,SAA0B3pB,OAAOud,OAAOze,GAAKyD,WAAYA,EAAW+jB,eAAgBA,GAAevF,UAAWA,GAAU3S,UAAWA,GAAUjL,SAAUA,GAASsI,YAAaA,GAAY4V,YAAaA,GAAYzgB,UAAWA,KAAgC,mBAAX+oB,QAAyBA,OAAOC,QAAU9oB","file":"gauge.min.js","sourcesContent":["/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.5\n */\n(function(ns) {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Object.defineProperty(Array.prototype, \"indexOf\", {\n        value: function value(searchElement, fromIndex) {\n            var k;\n\n            if (this === null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var O = Object(this);\n            var len = O.length >>> 0;\n\n            if (len === 0) {\n                return -1;\n            }\n\n            var n = +fromIndex || 0;\n\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n\n            if (n >= len) {\n                return -1;\n            }\n\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n\n                k++;\n            }\n\n            return -1;\n        }\n    });\n}\n\n/**\n * @external {Array.fill} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n */\n/* istanbul ignore next */\nif (!Array.prototype.fill) {\n    Object.defineProperty(Array.prototype, \"fill\", {\n        value: function value(_value) {\n            if (this === null) {\n                throw new TypeError('this is null or not defined');\n            }\n\n            var O = Object(this);\n            var len = O.length >>> 0;\n            var start = arguments[1];\n            var relativeStart = start >> 0;\n            var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);\n            var end = arguments[2];\n            var relativeEnd = end === undefined ? len : end >> 0;\n            var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);\n            while (k < final) {\n                O[k] = _value;\n                k++;\n            }\n\n            return O;\n        }\n    });\n}\n\n/**\n * mocking window\n */\nif (typeof window === 'undefined') {\n    window = typeof global === 'undefined' ? {} : global;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Class EventEmitter - base event manager\n */\n\nvar EventEmitter = function () {\n    /**\n     * @constructor\n     */\n    function EventEmitter() {\n        _classCallCheck(this, EventEmitter);\n\n        this._events = {};\n\n        this.addListener = this.on;\n        this.removeListener = this.off;\n    }\n\n    /**\n     * Returns all event listeners\n     *\n     * @return {object}\n     */\n\n\n    _createClass(EventEmitter, [{\n        key: 'emit',\n\n\n        /**\n         * Emits given event bypassing to each registered handler given args\n         *\n         * @param {string} event\n         * @param {...*} args\n         */\n        value: function emit(event) {\n            if (this._events[event]) {\n                var i = 0;\n                var s = this._events[event].length;\n\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = arguments[_key];\n                }\n\n                for (; i < s; i++) {\n                    this._events[event][i] && this._events[event][i].apply(this, args);\n                }\n            }\n        }\n\n        /**\n         * Registers given handler for given event to be called only once when\n         * event is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'once',\n        value: function once(event) {\n            for (var _len2 = arguments.length, handlers = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                handlers[_key2 - 1] = arguments[_key2];\n            }\n\n            var i = 0;\n            var s = handlers.length;\n            var self = this;\n\n            var _loop = function _loop() {\n                var handler = handlers[i];\n                var wrapper = function wrapper() {\n                    self.off(event, wrapper);\n                    handler.apply(self, arguments);\n                };\n\n                handlers[i] = wrapper;\n            };\n\n            for (; i < s; i++) {\n                _loop();\n            }\n\n            this.on.apply(this, [event].concat(handlers));\n        }\n\n        /**\n         * Registers given handlers for a given events to be called each time event\n         * is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'on',\n        value: function on(event) {\n            if (!this._events[event]) {\n                this._events[event] = [];\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                this._events[event].push(arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n            }\n        }\n\n        /**\n         * Un-registers previously registered event handlers\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'off',\n        value: function off(event) {\n            if (!this._events[event]) {\n                return;\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                var _handler = arguments.length <= i + 1 ? undefined : arguments[i + 1];\n                var index = void 0;\n\n                while (~(index = this._events[event].indexOf(_handler))) {\n                    this._events[event].splice(index, 1);\n                }\n            }\n        }\n\n        /**\n         * Removes all listeners for a given event\n         *\n         * @param {string} event\n         */\n\n    }, {\n        key: 'removeAllListeners',\n        value: function removeAllListeners(event) {\n            delete this._events[event];\n        }\n    }, {\n        key: 'listeners',\n        get: function get() {\n            return this._events;\n        }\n    }]);\n\n    return EventEmitter;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/* jshint -W079 */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\n\n\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n    var animationTransformed = 0;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    if (percent !== 1) {\n        animationTransformed = rule(percent);\n\n        // make sure we have correct number after applying animation\n        // transformation\n        if (isFinite(animationTransformed) && !isNaN(animationTransformed)) {\n            percent = animationTransformed;\n        }\n    }\n\n    draw && draw(percent);\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n        anim.inProgress = false;\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'linear';\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            this.frame && this.cancel();\n\n            // noinspection JSUnresolvedVariable\n            var start = window.performance && window.performance.now ? window.performance.now() : vendorize('animationStartTime') || Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            this.draw = draw;\n            this.end = end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Cancels current animation if any\n         */\n\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.cancel();\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\n */\n/**\n * @typedef {{parse: function, stringify: function}} JSON\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\n */\n/**\n * @ignore\n * @typedef {{MutationObserver: function}} ns\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} type\n     */\n    function DomObserver(options, element, type) {\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = ns[type];\n\n        /**\n         * Signals if mutations observer for this type or not\n         *\n         * @type {boolean}\n         */\n        this.mutationsObserved = false;\n\n        /**\n         * Flag specifies whenever the browser supports observing\n         * of DOM tree mutations or not\n         *\n         * @type {boolean}\n         */\n        this.isObservable = !!window.MutationObserver;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        if (!window.GAUGES_NO_AUTO_INIT) {\n            DomObserver.domReady(this.traverse.bind(this));\n        }\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n                new MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        setTimeout(this.process.bind(this, record.target));\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface|null}\n         */\n        value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new MutationObserver(function (records) {\n                records.forEach(function (record) {\n                    if (record.type === 'attributes') {\n                        var attr = record.attributeName.toLowerCase();\n                        var type = node.getAttribute(attr).toLowerCase();\n\n                        if (attr === 'data-type' && type && type !== _this2.type) {\n                            instance.observer.disconnect();\n                            delete instance.observer;\n                            instance.destroy && instance.destroy();\n                        } else if (attr.substr(0, 5) === 'data-') {\n                            var _prop = attr.substr(5).split('-').map(function (part, i) {\n                                return !i ? part : part.charAt(0).toUpperCase() + part.substr(1);\n                            }).join('');\n                            var _options = {};\n\n                            _options[_prop] = DomObserver.parse(node.getAttribute(record.attributeName));\n\n                            if (_prop === 'value') {\n                                instance && (instance.value = _options[_prop]);\n                            } else {\n                                instance.update && instance.update(_options);\n                            }\n                        }\n                    }\n                });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms dashed string to CamelCase representation\n         *\n         * @param {string} dashed\n         * @param {boolean} [capitalized]\n         * @return {string}\n         */\n\n    }, {\n        key: 'toCamelCase',\n        value: function toCamelCase(dashed) {\n            var capitalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var arr = dashed.split(/-/);\n            var i = 0;\n            var s = arr.length;\n            var str = '';\n\n            for (; i < s; i++) {\n                if (!(i || capitalized)) {\n                    str += arr[i].toLowerCase();\n                } else {\n                    str += arr[i][0].toUpperCase() + arr[i].substr(1).toLowerCase();\n                }\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (/comp|inter|loaded/.test((window.document || {}).readyState + '')) return handler();\n\n            if (window.addEventListener) window.addEventListener('DOMContentLoaded', handler, false);else if (window.attachEvent) window.attachEvent('onload', handler);\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} [width]\n     * @param {number} [height]\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(-this.drawX, -this.drawY, this.drawWidth, this.drawHeight);\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n * Shared generic gauges options\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], exactTicks: boolean, minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorStrokeTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarStroke: string, colorBarProgress: string, colorBarShadow: string, barShadow: number, listeners: object}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    exactTicks: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n    numbersMargin: 1,\n\n    listeners: null,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorPlateEnd: '',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorStrokeTicks: '',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedle: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuter: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddle: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInner: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n    colorValueBoxRect: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarProgress: '#888',\n    colorBarShadow: '#000',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: 'normal',\n    fontTitleStyle: 'normal',\n    fontUnitsStyle: 'normal',\n    fontValueStyle: 'normal',\n\n    fontNumbersWeight: 'normal',\n    fontTitleWeight: 'normal',\n    fontUnitsWeight: 'normal',\n    fontValueWeight: 'normal',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: '',\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }],\n    highlightsWidth: 15,\n\n    // progress bar\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n    barShadow: 0\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar version = '2.1.5';\n\nvar round = Math.round;\nvar abs = Math.abs;\n\nvar gauges = new Collection();\n\ngauges.version = version;\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function (_EventEmitter) {\n    _inherits(BaseGauge, _EventEmitter);\n\n    /**\n     * Fired each time gauge is initialized on a page\n     *\n     * @event BaseGauge#init\n     */\n\n    /**\n     * Fired each time gauge scene is rendered\n     *\n     * @event BaseGauge#render\n     */\n\n    /**\n     * Fired each time gauge object is destroyed\n     *\n     * @event BaseGauge#destroy\n     */\n\n    /**\n     * Fired each time before animation is started on the gauge\n     *\n     * @event BaseGauge#animationStart\n     */\n\n    /**\n     * Fired each time animation scene is complete\n     *\n     * @event BaseGauge#animate\n     * @type {number} percent\n     * @type {number} value\n     */\n\n    /**\n     * Fired each time animation is complete on the gauge\n     *\n     * @event BaseGauge#animationEnd\n     */\n\n    /**\n     * @event BaseGauge#value\n     * @type {number} newValue\n     * @type {number} oldValue\n     */\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var _this3 = _possibleConstructorReturn(this, (BaseGauge.__proto__ || Object.getPrototypeOf(BaseGauge)).call(this));\n\n        var className = _this3.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gauges.push(_this3);\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(function (event) {\n                var handlers = options.listeners[event] instanceof Array ? options.listeners[event] : [options.listeners[event]];\n\n                handlers.forEach(function (handler) {\n                    _this3.on(event, handler);\n                });\n            });\n        }\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Gauges version string\n         *\n         * @type {string}\n         */\n        _this3.version = version;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        _this3.type = ns[className] || BaseGauge;\n\n        /**\n         * True if gauge has been drawn for the first time, false otherwise.\n         *\n         * @type {boolean}\n         */\n        _this3.initialized = false;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n        options.value = parseFloat(options.value) || 0;\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw TypeError('Given gauge canvas element is invalid!');\n        }\n\n        options.width = parseFloat(options.width) || 0;\n        options.height = parseFloat(options.height) || 0;\n\n        if (!options.width || !options.height) {\n            if (!options.width) options.width = canvas.parentNode ? canvas.parentNode.offsetWidth : canvas.offsetWidth;\n            if (!options.height) options.height = canvas.parentNode ? canvas.parentNode.offsetHeight : canvas.offsetHeight;\n        }\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        _this3.options = options || {};\n\n        if (_this3.options.animateOnInit) {\n            _this3._value = _this3.options.value;\n            _this3.options.value = _this3.options.minValue;\n        }\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        _this3.canvas = new SmartCanvas(canvas, options.width, options.height);\n        _this3.canvas.onRedraw = _this3.draw.bind(_this3);\n\n        /**\n         * @type {Animation} animation\n         */\n        _this3.animation = new Animation(options.animationRule, options.animationDuration);\n        return _this3;\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {RadialGaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, this.type.configure(options || {}));\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n\n            this.emit('destroy');\n        }\n\n        /**\n         * Returns gauges version string\n         *\n         * @return {string}\n         */\n\n    }, {\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n        value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n                this.value = this._value;\n                this.initialized = true;\n                this.emit('init');\n            }\n\n            this.emit('render');\n\n            return this;\n        }\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} type\n         * @param {GenericOptions} options\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this4 = this;\n\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            var fromValue = this.options.value;\n\n            if (value === fromValue) {\n                return;\n            }\n\n            if (this.options.animation) {\n                if (this.animation.frame) {\n                    // animation is already in progress -\n                    // forget related old animation value\n                    // @see https://github.com/Mikhus/canvas-gauges/issues/94\n                    this.options.value = this._value;\n\n                    // if there is no actual value change requested stop it\n                    if (this._value === value) {\n                        this.animation.cancel();\n                        delete this._value;\n                        return;\n                    }\n                }\n\n                /**\n                 * @type {number}\n                 * @access private\n                 */\n                if (this._value === undefined) {\n                    this._value = value;\n                }\n\n                this.emit('animationStart');\n\n                this.animation.animate(function (percent) {\n                    var newValue = fromValue + (value - fromValue) * percent;\n\n                    _this4.options.animatedValue && _this4.emit('value', newValue, _this4.value);\n\n                    _this4.options.value = newValue;\n\n                    _this4.draw();\n\n                    _this4.emit('animate', percent, _this4.options.value);\n                }, function () {\n                    if (_this4._value !== undefined) {\n                        _this4.emit('value', _this4._value, _this4.value);\n                        _this4.options.value = _this4._value;\n                        delete _this4._value;\n                    }\n\n                    _this4.draw();\n                    _this4.emit('animationEnd');\n                });\n            } else {\n                this.emit('value', value, this.value);\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n\n        /**\n         * Updates gauge options\n         *\n         * @param {*} options\n         * @return {BaseGauge}\n         * @access protected\n         */\n\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            return options;\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize(type, options) {\n            return new DomObserver(options, 'canvas', type);\n        }\n\n        /**\n         * Initializes gauge from a given HTML element\n         * (given element should be valid HTML canvas gauge definition)\n         *\n         * @param {HTMLElement} element\n         */\n\n    }, {\n        key: 'fromElement',\n        value: function fromElement(element) {\n            var type = DomObserver.toCamelCase(element.getAttribute('data-type'));\n            var attributes = element.attributes;\n            var i = 0;\n            var s = attributes.length;\n            var options = {};\n\n            if (!type) {\n                return;\n            }\n\n            if (!/Gauge$/.test(type)) {\n                type += 'Gauge';\n            }\n\n            for (; i < s; i++) {\n                options[DomObserver.toCamelCase(attributes[i].name.replace(/^data-/, ''), false)] = DomObserver.parse(attributes[i].value);\n            }\n\n            new DomObserver(options, element.tagName, type).process(element);\n        }\n\n        /**\n         * Ensures value is proper number\n         *\n         * @param {*} value\n         * @param {number} min\n         * @return {number}\n         */\n\n    }, {\n        key: 'ensureValue',\n        value: function ensureValue(value) {\n            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n                value = parseFloat(min) || 0;\n            }\n\n            return value;\n        }\n\n        /**\n         * Corrects javascript modulus bug\n         * @param {number} n\n         * @param {number} m\n         * @return {number}\n         */\n\n    }, {\n        key: 'mod',\n        value: function mod(n, m) {\n            return (n % m + m) % m;\n        }\n    }, {\n        key: 'version',\n        get: function get() {\n            return version;\n        }\n    }]);\n\n    return BaseGauge;\n}(EventEmitter);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['BaseGauge'] = BaseGauge;\n    ns['gauges'] = (window.document || {})['gauges'] = gauges;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Examines if a given error is something to throw or to ignore\n *\n * @param {Error} err\n */\nfunction verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n        return; // ignore it\n    }\n\n    throw err;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Prepares major ticks data\n *\n * @access private\n * @param {GenericOptions|{ tickSide: string }} options\n * @return {[boolean, boolean]}\n */\nfunction prepareTicks(options) {\n    if (!(options.majorTicks instanceof Array)) {\n        options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @param {boolean} [isVertical]\n * @param {number} [from]\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(isVertical ? 0 : from, isVertical ? from : 0, isVertical ? 0 : length, isVertical ? length : 0);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws the shadow if it was not drawn\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {boolean} shadowDrawn\n * @return {boolean}\n */\nfunction drawShadow(context, options) {\n    var shadowDrawn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n        context.restore();\n        return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n        context.shadowBlur = w;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Constructs font styles for canvas fonts\n *\n * @param {GenericOptions} options\n * @param {string} target\n * @param {number} baseSize\n */\nfunction font(options, target, baseSize) {\n    return options['font' + target + 'Style'] + ' ' + options['font' + target + 'Weight'] + ' ' + options['font' + target + 'Size'] * baseSize + 'px ' + options['font' + target];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Resets some context settings\n *\n * @param {Canvas2DContext} context\n */\nfunction reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = '';\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Declares to drow value text shadow if configured\n *\n * @param context\n * @param options\n * @param offset\n * @param blur\n */\nfunction drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n        context.shadowOffsetX = offset;\n        context.shadowOffsetY = offset;\n        context.shadowBlur = blur;\n        context.shadowColor = options.colorValueTextShadow;\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box at given position\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {number|string} value\n * @param {number} x\n * @param {number} y\n * @param {number} max\n */\nfunction drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var addLength = options.valueDec ? 1 + options.valueDec : 0;\n    var maxValueWidth = '9'.repeat(Math.max.apply(null, [String(parseInt(value)).length + addLength].concat(options.majorTicks.map(function (val) {\n        return String(parseInt(val, 10)).length + addLength;\n    }))));\n    var text = options.valueText || padValue(value, options);\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, 'Value', tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(options.valueText ? text : '-' + padValue(Number(maxValueWidth), options)).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = (parseFloat(options.valueBoxWidth) || 0) / 100 * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n        var grd = context.createRadialGradient(x, gy, runit * 10, x, gy, runit * 20);\n\n        grd.addColorStop(0, options.colorValueBoxRect);\n        grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n        context.strokeStyle = grd;\n        context.lineWidth = sw;\n        context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n        context.shadowBlur = 1.2 * runit;\n        context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n        context.fillStyle = options.colorValueBoxBackground;\n        context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.textBaseline = 'alphabetic';\n    context.fillText(text, bx + bw / 2, y + bh / 2 - th / 3);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns normalized value\n *\n * @param {GenericOptions} options\n * @return {{normal: number, indented: number}}\n */\nfunction normalizedValue(options) {\n    var value = options.value;\n    var min = options.minValue;\n    var max = options.maxValue;\n    var dt = (max - min) * 0.01;\n\n    return {\n        normal: value < min ? min : value > max ? max : value,\n        indented: value < min ? min - dt : value > max ? max + dt : value\n    };\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font,\n    normalizedValue: normalizedValue\n};\n\ndrawings;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{exactTicks: boolean, ticksAngle: number, startAngle: number, colorNeedleCircleOuter: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInner: string, colorNeedleCircleInnerEnd: string, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean, animationTarget: string, useMinPath: boolean}} RadialGaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {RadialGaugeOptions}\n */\nvar defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuter: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInner: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n    needleStart: 20,\n\n    // custom animations\n    animationTarget: 'needle', // 'needle' or 'plate'\n    useMinPath: false,\n\n    barWidth: 0\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {number} width\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end ? drawings.linearGradient(context, start, end, radius) : start;\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @return {number}\n */\nfunction maxRadialRadius(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio + (options.borderOuterWidth ? 0.5 : 0) + (options.borderMiddleWidth ? 0.5 : 0) + (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialPlate(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    var d0 = options.borderShadowWidth * pxRatio;\n    var r0 = context.max - d0 - options.borderOuterWidth * pxRatio / 2;\n    var r1 = r0 - options.borderOuterWidth * pxRatio / 2 - options.borderMiddleWidth * pxRatio / 2 + 0.5;\n    var r2 = r1 - options.borderMiddleWidth * pxRatio / 2 - options.borderInnerWidth * pxRatio / 2 + 0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r0, options.borderOuterWidth * pxRatio, context, options.colorBorderOuter, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r1, options.borderMiddleWidth * pxRatio, context, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r2, options.borderInnerWidth * pxRatio, context, options.colorBorderInner, options.colorBorderInnerEnd);\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n        grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n        grad.addColorStop(0, options.colorPlate);\n        grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n        grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialHighlights(context, options) {\n    var hlWidth = context.max * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n        s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n\n        context.beginPath();\n\n        context.rotate(HPI);\n        context.arc(0, 0, r, drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd), drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd), false);\n        context.strokeStyle = hlt.color;\n        context.lineWidth = hlWidth;\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMinorTicks(context, options) {\n    var radius = radialTicksRadius(context, options);\n    var s = void 0,\n        range = void 0,\n        angle = void 0;\n    var i = 0;\n    var delta = 0;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks || options.colorStrokeTicks;\n\n    context.save();\n\n    if (options.exactTicks) {\n        range = options.maxValue - options.minValue;\n        s = minTicks ? range / minTicks : 0;\n        delta = (BaseGauge.mod(options.majorTicks[0], minTicks) || 0) * ratio;\n    } else {\n        s = minTicks * (options.majorTicks.length - 1);\n    }\n\n    for (; i < s; ++i) {\n        angle = options.startAngle + delta + i * (options.ticksAngle / s);\n        if (angle <= options.ticksAngle + options.startAngle) {\n            context.rotate(drawings.radians(angle));\n\n            context.beginPath();\n            context.moveTo(0, radius);\n            context.lineTo(0, radius - context.max * 0.075);\n            closeStrokedPath(context);\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns ticks radius\n *\n * @access private\n * @param context\n * @param options\n * @return {number}\n */\nfunction radialTicksRadius(context, options) {\n    var unit = context.max / 100;\n\n    return maxRadialRadius(context, options) - 5 * unit - (options.barWidth ? (parseFloat(options.barStrokeWidth) || 0) * 2 + ((parseFloat(options.barWidth) || 0) + 5) * unit : 0);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMajorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n        colors = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(s).fill(options.colorStrokeTicks || options.colorMajorTicks);\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction radialNextAngle(options, i, s) {\n    if (options.exactTicks) {\n        var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n        return options.startAngle + ratio * (i - options.minValue);\n    }\n\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Strokes, closes path and restores previous context state\n *\n * @param {Canvas2DContext} context\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNumbers(context, options) {\n    var radius = radialTicksRadius(context, options) - context.max * 0.15;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== 'needle';\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated ? -(options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle : 0;\n\n    if (isAnimated) {\n        context.save();\n        context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    context.font = drawings.font(options, 'Numbers', context.max / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (; i < s; ++i) {\n        var angle = plateValueAngle + radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s);\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius = Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(radius - textRadius - options.numbersMargin / 100 * context.max, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n    }\n\n    isAnimated && context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Title', context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Units', context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.ticksAngle < 360 ? drawings.normalizedValue(options).indented : options.value;\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs(max / 100 * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs(max / 100 * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs(max / 100 * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(options.needleStart ? max / 100 * options.needleStart : 0);\n    //noinspection JSUnresolvedFunction\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== 'needle';\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.rotate(drawings.radians(isFixed ? options.startAngle : options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedle, options.colorNeedleEnd, rIn - rStart);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rStart);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rStart);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rStart);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rStart);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    if (options.needleCircleSize) {\n        context.restore();\n\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuter, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInner, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n\n        context.restore();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @param {number} value\n */\nfunction drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(context, options, value, 0, context.max - context.max * 0.33, context.max);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge progress bar\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialProgressBar(context, options) {\n    var unit = context.max / 100;\n    var rMax = maxRadialRadius(context, options) - 5 * unit;\n    var sw = parseFloat(options.barStrokeWidth) || 0;\n    var w = (parseFloat(options.barWidth) || 0) * unit;\n    var rMin = rMax - sw * 2 - w;\n    var half = (rMax - rMin) / 2;\n    var r = rMin + half;\n    var delta = sw / r;\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n\n    context.save();\n    context.rotate(HPI);\n\n    if (sw) {\n        // draw stroke\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa) - delta, drawings.radians(ea) + delta, false);\n        context.strokeStyle = options.colorBarStroke;\n        context.lineWidth = half * 2;\n        context.stroke();\n        context.closePath();\n    }\n\n    if (w) {\n        // draw bar\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa), drawings.radians(ea), false);\n        context.strokeStyle = options.colorBar;\n        context.lineWidth = w;\n        context.stroke();\n        context.closePath();\n\n        if (options.barShadow) {\n            // draw shadow\n            context.beginPath();\n            context.arc(0, 0, rMax, drawings.radians(sa), drawings.radians(ea), false);\n            context.clip();\n\n            context.beginPath();\n            context.strokeStyle = options.colorBar;\n            context.lineWidth = 1;\n            context.shadowBlur = options.barShadow;\n            context.shadowColor = options.colorBarShadow;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n            context.arc(0, 0, rMax, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n            context.stroke();\n            context.closePath();\n\n            context.restore();\n            context.rotate(HPI);\n        }\n\n        // draw bar progress\n        if (options.barProgress) {\n            context.beginPath();\n            context.arc(0, 0, r, drawings.radians(sa), drawings.radians(sa + (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle), false);\n            context.strokeStyle = options.colorBarProgress;\n            context.lineWidth = w;\n            context.stroke();\n            context.closePath();\n        }\n    }\n\n    context.restore();\n}\n\n/**\n * Find and return gauge value to display\n *\n * @param {RadialGauge} gauge\n */\nfunction displayValue(gauge) {\n    if (gauge.options.animatedValue) {\n        return gauge.options.value;\n    }\n\n    return gauge.value;\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new RadialGauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar RadialGauge = function (_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event RadialGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event RadialGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event RadialGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event RadialGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event RadialGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event RadialGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event RadialGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event RadialGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event RadialGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event RadialGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {RadialGaugeOptions} options\n     */\n    function RadialGauge(options) {\n        _classCallCheck(this, RadialGauge);\n\n        options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(this, RadialGauge.configure(options)));\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n\n    _createClass(RadialGauge, [{\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @returns {RadialGauge}\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref[0],\n                    y = _ref[1],\n                    w = _ref[2],\n                    h = _ref[3];\n\n                var options = this.options;\n\n                if (options.animationTarget === 'needle') {\n                    if (!canvas.elementClone.initialized) {\n                        var context = canvas.contextClone;\n\n                        // clear the cache\n                        context.clearRect(x, y, w, h);\n                        context.save();\n\n                        this.emit('beforePlate');\n                        drawRadialPlate(context, options);\n                        this.emit('beforeHighlights');\n                        drawRadialHighlights(context, options);\n                        this.emit('beforeMinorTicks');\n                        drawRadialMinorTicks(context, options);\n                        this.emit('beforeMajorTicks');\n                        drawRadialMajorTicks(context, options);\n                        this.emit('beforeNumbers');\n                        drawRadialNumbers(context, options);\n                        this.emit('beforeTitle');\n                        drawRadialTitle(context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    this.canvas.commit();\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n                    this.emit('beforeValueBox');\n                    drawRadialValueBox(canvas.context, options, displayValue(this));\n                    this.emit('beforeNeedle');\n                    drawRadialNeedle(canvas.context, options);\n                } else {\n                    var plateValueAngle = -drawings.radians((options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle);\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforePlate');\n                    drawRadialPlate(canvas.context, options);\n\n                    canvas.context.rotate(plateValueAngle);\n\n                    // animated\n                    this.emit('beforeHighlights');\n                    drawRadialHighlights(canvas.context, options);\n                    this.emit('beforeMinorTicks');\n                    drawRadialMinorTicks(canvas.context, options);\n                    this.emit('beforeMajorTicks');\n                    drawRadialMajorTicks(canvas.context, options);\n                    this.emit('beforeNumbers');\n                    drawRadialNumbers(canvas.context, options);\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n\n                    // non-animated\n                    canvas.context.rotate(-plateValueAngle);\n                    canvas.context.save();\n\n                    if (!canvas.elementClone.initialized) {\n                        var _context = canvas.contextClone;\n\n                        // clear the cache\n                        _context.clearRect(x, y, w, h);\n                        _context.save();\n\n                        this.emit('beforeTitle');\n                        drawRadialTitle(_context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(_context, options);\n                        this.emit('beforeNeedle');\n                        drawRadialNeedle(_context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                }\n\n                // value box animations\n                this.emit('beforeValueBox');\n                drawRadialValueBox(canvas.context, options, displayValue(this));\n\n                _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'value',\n\n\n        /**\n         * Sets the value for radial gauge\n         *\n         * @param {number} value\n         */\n        set: function set(value) {\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            if (this.options.animation && this.options.ticksAngle === 360 && this.options.useMinPath) {\n                this._value = value;\n                value = this.options.value + ((value - this.options.value) % 360 + 540) % 360 - 180;\n            }\n\n            _set(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', value, this);\n        }\n\n        /**\n         * Returns current gauge value\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', this);\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            if (options.barWidth > 50) options.barWidth = 50;\n\n            /* istanbul ignore if */\n            if (isNaN(options.startAngle)) options.startAngle = 45;\n            /* istanbul ignore if */\n            if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n            /* istanbul ignore if */\n            if (options.ticksAngle > 360) options.ticksAngle = 360;\n            /* istanbul ignore if */\n            if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n            /* istanbul ignore if */\n            if (options.startAngle < 0) options.startAngle = 0;\n            /* istanbul ignore if */\n            if (options.startAngle > 360) options.startAngle = 360;\n\n            return options;\n        }\n    }]);\n\n    return RadialGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['RadialGauge'] = RadialGauge;\n}\n\nBaseGauge.initialize('RadialGauge', defaultRadialGaugeOptions);\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number, colorBarEnd: string, colorBarProgressEnd: string}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    colorBarEnd: '',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both', // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h, h > w, w > h ? x : y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} width width of the border\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawLinearBorder(context, width, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    context.save();\n\n    var r = options.borderRadius * pxRatio;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var w2 = w1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var w3 = w2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var w4 = w3 - options.borderInnerWidth * pxRatio;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var h2 = h1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var h3 = h2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var h4 = h3 - options.borderInnerWidth * pxRatio;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderOuterWidth * pxRatio, r, x + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, y + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, w1, h1, options.colorBorderOuter, options.colorBorderOuterEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderMiddleWidth * pxRatio, r -= 1 + aliasingOffset * 2, x2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, y2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, w2 + aliasingOffset * 2, h2 + aliasingOffset * 2, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderInnerWidth * pxRatio, r -= 1 + aliasingOffset * 2, x3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, y3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, w3 + aliasingOffset * 2, h3 + aliasingOffset * 2, options.colorBorderInner, options.colorBorderInnerEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(context, r, x4, y4, w4 + aliasingOffset * 2, h4 + aliasingOffset * 2, options.colorPlate, options.colorPlateEnd);\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = round(length * 0.05);\n        //noinspection JSUnresolvedFunction\n        titleMargin = round(length * 0.075);\n        //noinspection JSUnresolvedFunction\n        valueMargin = round(length * 0.11);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n        if (hasValue) length -= valueMargin;\n    } else {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = titleMargin = round(width * 0.15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round(length * options.barLength / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n    var dx = isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n    var dy = !isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x + dx,\n        Y: y + dy,\n        x0: x0 + dx,\n        y0: y0 + dy,\n        baseX: x,\n        baseY: y,\n        ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws bar shape from the given options on a given canvas context\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {string} type\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h),\n        isVertical = _barDimensions.isVertical,\n        width = _barDimensions.width,\n        barWidth = _barDimensions.barWidth,\n        barLength = _barDimensions.barLength,\n        strokeWidth = _barDimensions.strokeWidth,\n        barMargin = _barDimensions.barMargin,\n        radius = _barDimensions.radius,\n        x0 = _barDimensions.x0,\n        y0 = _barDimensions.y0,\n        X = _barDimensions.X,\n        Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        //noinspection JSUnresolvedFunction\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n        //noinspection JSUnresolvedFunction\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        //noinspection JSUnresolvedFunction\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        //noinspection JSUnresolvedFunction\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (type === 'progress') {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        // bar ends at\n        //noinspection JSUnresolvedFunction\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        //noinspection JSUnresolvedFunction\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        //noinspection JSUnresolvedFunction\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        //noinspection JSUnresolvedFunction\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (type === 'progress') {\n            barLength *= (options.value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== 'progress' && options.barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (type !== 'progress' && options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, barLength, isVertical, isVertical ? Y : X) : options.colorBar;\n        context.fill();\n    } else if (type === 'progress' && options.colorBarProgress) {\n        context.fillStyle = options.colorBarProgressEnd ? drawings.linearGradient(context, options.colorBarProgress, options.colorBarProgressEnd, fullBarLength, isVertical, isVertical ? Y : X) : options.colorBarProgress;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\n * Draws gauge bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, '', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Helper function to calculate bar ticks presence on the sides\n *\n * @param {string} notWhich\n * @param {LinearGaugeOptions} options\n * @return {boolean}\n */\nfunction hasTicksBar(notWhich, options) {\n    return options.needleSide !== notWhich || options.tickSide !== notWhich || options.numberSide !== notWhich;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options, 'progress', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions,\n        isVertical = _context$barDimension.isVertical,\n        width = _context$barDimension.width,\n        length = _context$barDimension.length,\n        barWidth = _context$barDimension.barWidth,\n        barOffset = _context$barDimension.barOffset,\n        barMargin = _context$barDimension.barMargin,\n        X = _context$barDimension.X,\n        Y = _context$barDimension.Y,\n        ticksLength = _context$barDimension.ticksLength,\n        ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = width * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft = round((options.ticksWidth / 100 + ticksPadding) * width) + (hlWidth - options.ticksWidth / 100 * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        //noinspection JSUnresolvedFunction\n        var eStart = ticksLength * abs(options.minValue - entry.from) / interval;\n        //noinspection JSUnresolvedFunction\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n        } else {\n            if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws a tick line on a linear gauge\n *\n * @param {Canvas2DContext} context\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks\n *\n * @param {Canvas2DContext} context\n * @param {string} color\n * @param {number[]} ticks\n * @param {number} minVal\n * @param {number} maxVal\n * @param {boolean} hasLeft\n * @param {boolean} hasRight\n * @param {number} lineWidth\n * @param {number} lineLength\n */\nfunction drawLinearTicks(context, color, ticks, minVal, maxVal, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions,\n        isVertical = _context$barDimension2.isVertical,\n        length = _context$barDimension2.length,\n        barWidth = _context$barDimension2.barWidth,\n        barOffset = _context$barDimension2.barOffset,\n        barMargin = _context$barDimension2.barMargin,\n        pixelRatio = _context$barDimension2.pixelRatio,\n        width = _context$barDimension2.width,\n        X = _context$barDimension2.X,\n        Y = _context$barDimension2.Y,\n        ticksLength = _context$barDimension2.ticksLength,\n        ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var s = ticks.length;\n    var val = void 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var colors = color instanceof Array ? color : new Array(ticks.length).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    var ratio = ticksLength / (maxVal - minVal);\n    for (; i < s; i++) {\n        val = ticks[i];\n        context.strokeStyle = colors[i];\n\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset + (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset - (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options),\n        _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2),\n        hasLeft = _drawings$prepareTick2[0],\n        hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var valuePerNonExactTick = (options.maxValue - options.minValue) / (options.majorTicks.length - 1);\n    var colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(options.majorTicks.length).fill(options.colorStrokeTicks || options.colorMajorTicks);\n    var ticks = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n\n    drawLinearTicks(context, colors, ticks, options.minValue, options.maxValue, hasLeft, hasRight, lineWidth, options.ticksWidth / 100);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions,\n            isVertical = _context$barDimension3.isVertical,\n            length = _context$barDimension3.length,\n            width = _context$barDimension3.width,\n            barWidth = _context$barDimension3.barWidth,\n            barMargin = _context$barDimension3.barMargin,\n            barOffset = _context$barDimension3.barOffset,\n            X = _context$barDimension3.X,\n            Y = _context$barDimension3.Y,\n            ticksLength = _context$barDimension3.ticksLength,\n            pixelRatio = _context$barDimension3.pixelRatio,\n            ticksPadding = _context$barDimension3.ticksPadding;\n\n        var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n        var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks stroke\n *\n * @param {Canvas2DContext} context\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options),\n        _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2),\n        hasLeft = _drawings$prepareTick4[0],\n        hasRight = _drawings$prepareTick4[1];\n\n    var ticks = [];\n    var i = options.minValue;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var valuePerNonExactTick = minTicks ? (options.maxValue - options.minValue) / (minTicks * (options.majorTicks.length - 1)) : 0;\n\n    if (minTicks) {\n        if (options.exactTicks) {\n            var delta = BaseGauge.mod(options.majorTicks[0], minTicks) || 0;\n\n            for (; i < options.maxValue; i += minTicks) {\n                if (delta + i < options.maxValue) {\n                    ticks.push(delta + i);\n                }\n            }\n        } else {\n            for (; i < options.maxValue; i += valuePerNonExactTick) {\n                ticks.push(i);\n            }\n        }\n    }\n\n    drawLinearTicks(context, options.colorMinorTicks || options.colorStrokeTicks, ticks, options.minValue, options.maxValue, hasLeft, hasRight, 1, options.ticksWidthMinor / 100);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions,\n        isVertical = _context$barDimension4.isVertical,\n        length = _context$barDimension4.length,\n        width = _context$barDimension4.width,\n        barWidth = _context$barDimension4.barWidth,\n        barMargin = _context$barDimension4.barMargin,\n        barOffset = _context$barDimension4.barOffset,\n        X = _context$barDimension4.X,\n        Y = _context$barDimension4.Y,\n        ticksLength = _context$barDimension4.ticksLength,\n        ticksPadding = _context$barDimension4.ticksPadding;\n\n    var range = options.maxValue - options.minValue;\n    var valuePerNonExactTick = range / (options.majorTicks.length - 1);\n    var tickValues = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n    var ticks = tickValues.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = options.fontNumbersSize * width / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(ticks).fill(options.colorNumbers);\n    var textMargin = options.numbersMargin / 100 * width;\n\n    context.font = drawings.font(options, 'Numbers', width / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        context.fillStyle = colors[i];\n        tick = options.majorTicks[i];\n        numberOffset = options.exactTicks ? ticksLength * ((tickValues[i] - options.minValue) / range) : i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft - textMargin, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight + textMargin, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft - textMargin);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight + textMargin);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions,\n        isVertical = _context$barDimension5.isVertical,\n        width = _context$barDimension5.width,\n        length = _context$barDimension5.length,\n        baseX = _context$barDimension5.baseX,\n        baseY = _context$barDimension5.baseY,\n        titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = options.fontTitleSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - 0.025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Title', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions,\n        isVertical = _context$barDimension6.isVertical,\n        width = _context$barDimension6.width,\n        length = _context$barDimension6.length,\n        baseX = _context$barDimension6.baseX,\n        baseY = _context$barDimension6.baseY,\n        unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = options.fontUnitsSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2);\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorUnits;\n    context.font = drawings.font(options, 'Units', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge needles\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions,\n        isVertical = _context$barDimension7.isVertical,\n        width = _context$barDimension7.width,\n        length = _context$barDimension7.length,\n        barWidth = _context$barDimension7.barWidth,\n        barOffset = _context$barDimension7.barOffset,\n        barMargin = _context$barDimension7.barMargin,\n        ticksLength = _context$barDimension7.ticksLength,\n        X = _context$barDimension7.X,\n        Y = _context$barDimension7.Y,\n        ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * (drawings.normalizedValue(options).indented - options.minValue) / (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength, true);\n        }\n    } else {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength, true);\n        }\n    }\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns needle color style\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} length\n * @param {boolean} [isRight]\n * @return {CanvasGradient|string}\n */\nfunction needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd ? drawings.linearGradient(context, isRight ? options.colorNeedleEnd : options.colorNeedle, isRight ? options.colorNeedle : options.colorNeedleEnd, length, !context.barDimensions.isVertical) : options.colorNeedle;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws line needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws arrow needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box for linear gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} value\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = (parseFloat(options.fontValueSize) || 0) * w / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical && drawings.drawValueBox(context, options, value, x + w / 2, y + h - boxWidth - dy, w);\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event LinearGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event LinearGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event LinearGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event LinearGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event LinearGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event LinearGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event LinearGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge bar area is drawn\n     *\n     * @event LinearGauge#beforeBar\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event LinearGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event LinearGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event LinearGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(this, LinearGauge.configure(options)));\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n\n\n        /* istanbul ignore next */\n        /**\n         * Triggering linear gauge render on a canvas.\n         *\n         * @returns {LinearGauge}\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref2 = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref2[0],\n                    y = _ref2[1],\n                    w = _ref2[2],\n                    h = _ref2[3];\n\n                var options = this.options;\n\n                if (!canvas.elementClone.initialized) {\n                    var context = canvas.contextClone;\n\n                    // clear the cache\n                    context.clearRect(x, y, w, h);\n                    context.save();\n\n                    this.emit('beforePlate');\n                    this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                    this.emit('beforeBar');\n                    drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                    canvas.context.barDimensions = context.barDimensions;\n\n                    this.emit('beforeHighlights');\n                    drawLinearBarHighlights(context, options);\n                    this.emit('beforeMinorTicks');\n                    drawLinearMinorTicks(context, options);\n                    this.emit('beforeMajorTicks');\n                    drawLinearMajorTicks(context, options);\n                    this.emit('beforeNumbers');\n                    drawLinearMajorTicksNumbers(context, options);\n                    this.emit('beforeTitle');\n                    drawLinearTitle(context, options);\n                    this.emit('beforeUnits');\n                    drawLinearUnits(context, options);\n\n                    canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                this.emit('beforeProgressBar');\n                drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n                this.emit('beforeNeedle');\n                drawLinearBarNeedle(canvas.context, options);\n                this.emit('beforeValueBox');\n                drawLinearValueBox.apply(undefined, [canvas.context, options, options.animatedValue ? this.options.value : this.value].concat(_toConsumableArray(this.drawBox)));\n\n                _get(LinearGauge.prototype.__proto__ || Object.getPrototypeOf(LinearGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            /* istanbul ignore else */\n            if (options.barStrokeWidth >= options.barWidth) {\n                //noinspection JSUnresolvedFunction\n                options.barStrokeWidth = round(options.barWidth / 2);\n            }\n\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasLeft = hasTicksBar('right', options);\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasRight = hasTicksBar('left', options);\n\n            if (options.value > options.maxValue) {\n                options.value = options.maxValue;\n            }\n\n            if (options.value < options.minValue) {\n                options.value = options.minValue;\n            }\n\n            return BaseGauge.configure(options);\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['LinearGauge'] = LinearGauge;\n}\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);;typeof module !== \"undefined\" && Object.assign(ns, {Collection: Collection,GenericOptions: GenericOptions,Animation: Animation,BaseGauge: BaseGauge,drawings: drawings,SmartCanvas: SmartCanvas,DomObserver: DomObserver,vendorize: vendorize});}(typeof module !== \"undefined\" ? module.exports : window));"]}